{"instruction": "Find all virtual machines in the 'prod-rg' resource group.", "output": "Get-AzVM -ResourceGroupName 'prod-rg'"}
{"instruction": "Create a new resource group named 'dev-testing-rg' in the 'East US' location.", "output": "New-AzResourceGroup -Name 'dev-testing-rg' -Location 'East US'"}
{"instruction": "Start the virtual machine 'web-01' in the 'prod-rg' resource group.", "output": "Start-AzVM -Name 'web-01' -ResourceGroupName 'prod-rg'"}
{"instruction": "Stop and deallocate the virtual machine 'web-01' in 'prod-rg'.", "output": "Stop-AzVM -Name 'web-01' -ResourceGroupName 'prod-rg' -Force"}
{"instruction": "Restart the virtual machine 'sql-01' in 'data-rg'.", "output": "Restart-AzVM -Name 'sql-01' -ResourceGroupName 'data-rg'"}
{"instruction": "Resize the VM 'compute-01' in 'ops-rg' to size 'Standard_D4s_v5'.", "output": "$vm = Get-AzVM -Name 'compute-01' -ResourceGroupName 'ops-rg'\n$vm.HardwareProfile.VmSize = 'Standard_D4s_v5'\nUpdate-AzVM -ResourceGroupName 'ops-rg' -VM $vm"}
{"instruction": "Create a StorageV2 account named 'stdevlogs1234' in 'eastus2' with Standard_LRS in 'dev-rg'.", "output": "New-AzStorageAccount -ResourceGroupName 'dev-rg' -Name 'stdevlogs1234' -Location 'eastus2' -SkuName 'Standard_LRS' -Kind 'StorageV2'"}
{"instruction": "Create a private blob container 'logs' on the storage account 'stdevlogs1234' in 'dev-rg'.", "output": "$ctx = (Get-AzStorageAccount -ResourceGroupName 'dev-rg' -Name 'stdevlogs1234').Context\nNew-AzStorageContainer -Name 'logs' -Context $ctx -Permission Off"}
{"instruction": "Upload the file './web.log' to the 'logs' container as 'web.log' using the 'stdevlogs1234' storage account in 'dev-rg'.", "output": "$ctx = (Get-AzStorageAccount -ResourceGroupName 'dev-rg' -Name 'stdevlogs1234').Context\nSet-AzStorageBlobContent -File './web.log' -Container 'logs' -Blob 'web.log' -Context $ctx"}
{"instruction": "Delete the resource group 'temp-rg'.", "output": "Remove-AzResourceGroup -Name 'temp-rg' -Force"}
{"instruction": "Add or update the tag 'env=prod' on all resources in 'prod-rg'.", "output": "Get-AzResource -ResourceGroupName 'prod-rg' | ForEach-Object { Update-AzTag -ResourceId $_.ResourceId -Operation Merge -Tag @{ env = 'prod' } }"}
{"instruction": "Assign the 'Reader' role on resource group 'prod-rg' to user 'alice@contoso.com'.", "output": "New-AzRoleAssignment -SignInName 'alice@contoso.com' -RoleDefinitionName 'Reader' -ResourceGroupName 'prod-rg'"}
{"instruction": "Create a new Azure AD user 'John Doe' with UPN 'john.doe@contoso.com' and require password change on first login.", "output": "New-AzureADUser -DisplayName 'John Doe' -UserPrincipalName 'john.doe@contoso.com' -AccountEnabled $true -MailNickname 'johndoe' -PasswordProfile @{ ForceChangePasswordNextLogin = $true; Password = 'Pass@w0rd!' }"}
{"instruction": "List resource groups in the 'eastus' region.", "output": "Get-AzResourceGroup | Where-Object { $_.Location -eq 'eastus' }"}
{"instruction": "Create a virtual network 'vnet-hub' with address space '10.0.0.0/16' and a subnet 'snet-apps' '10.0.1.0/24' in 'network-rg' located in 'eastus'.", "output": "$subnet = New-AzVirtualNetworkSubnetConfig -Name 'snet-apps' -AddressPrefix '10.0.1.0/24'\nNew-AzVirtualNetwork -Name 'vnet-hub' -ResourceGroupName 'network-rg' -Location 'eastus' -AddressPrefix '10.0.0.0/16' -Subnet $subnet"}
{"instruction": "Create a network security group 'nsg-web' in 'network-rg' with an inbound rule allowing TCP 80 from any source.", "output": "$rule = New-AzNetworkSecurityRuleConfig -Name 'Allow-HTTP' -Description 'Allow inbound HTTP' -Access Allow -Protocol Tcp -Direction Inbound -Priority 100 -SourceAddressPrefix * -SourcePortRange * -DestinationAddressPrefix * -DestinationPortRange 80\nNew-AzNetworkSecurityGroup -Name 'nsg-web' -ResourceGroupName 'network-rg' -Location 'eastus' -SecurityRules $rule"}
{"instruction": "Create a public IP 'pip-web-01' and a NIC 'nic-web-01' attached to VNet 'vnet-hub' subnet 'snet-apps' in 'network-rg' (eastus).", "output": "$pip = New-AzPublicIpAddress -Name 'pip-web-01' -ResourceGroupName 'network-rg' -Location 'eastus' -AllocationMethod Static -Sku Standard\n$vnet = Get-AzVirtualNetwork -Name 'vnet-hub' -ResourceGroupName 'network-rg'\n$subnet = Get-AzVirtualNetworkSubnetConfig -Name 'snet-apps' -VirtualNetwork $vnet\nNew-AzNetworkInterface -Name 'nic-web-01' -ResourceGroupName 'network-rg' -Location 'eastus' -SubnetId $subnet.Id -PublicIpAddressId $pip.Id"}
{"instruction": "List all stopped or deallocated VMs in the current subscription.", "output": "Get-AzVM -Status | Where-Object { $_.PowerState -match 'stopped|deallocated' }"}
{"instruction": "Create a Key Vault named 'kv-prod-001' in resource group 'prod-rg' located in 'eastus'.", "output": "New-AzKeyVault -Name 'kv-prod-001' -ResourceGroupName 'prod-rg' -Location 'eastus' -Sku Standard"}
{"instruction": "Set a secret named 'DbPassword' with value 'P@ssw0rd!123' in Key Vault 'kv-prod-001'.", "output": "Set-AzKeyVaultSecret -VaultName 'kv-prod-001' -Name 'DbPassword' -SecretValue (ConvertTo-SecureString 'P@ssw0rd!123' -AsPlainText -Force)"}
{"instruction": "List all managed disks that are not attached to any VM.", "output": "Get-AzDisk | Where-Object { -not $_.ManagedBy }"}
{"instruction": "Create a snapshot named 'osdisk-snap-01' from the managed disk 'osdisk-01' in 'prod-rg' (eastus).", "output": "$disk = Get-AzDisk -ResourceGroupName 'prod-rg' -DiskName 'osdisk-01'\n$cfg = New-AzSnapshotConfig -SourceUri $disk.Id -Location 'eastus' -CreateOption Copy\nNew-AzSnapshot -ResourceGroupName 'prod-rg' -SnapshotName 'osdisk-snap-01' -Snapshot $cfg"}
{"instruction": "Find the public IP addresses of all VMs in resource group 'prod-rg'.", "output": "Get-AzPublicIpAddress -ResourceGroupName 'prod-rg' | Where-Object { $_.IpConfiguration -ne $null } | Select-Object Name, IpAddress"}
{"instruction": "Create a Linux VM named 'web-01' in 'prod-rg' (eastus) of size 'Standard_B2s' using an existing NIC 'nic-web-01'.", "output": "New-AzVM -ResourceGroupName 'prod-rg' -Location 'eastus' -Name 'web-01' -Size 'Standard_B2s' -NetworkInterfaceNames 'nic-web-01' -Image 'Canonical:0001-com-ubuntu-server-jammy:22_04-lts:latest' -GenerateSshKey"}
{"instruction": "Enable boot diagnostics for VM 'web-01' in 'prod-rg' using storage account 'stdiagprod'.", "output": "$vm = Get-AzVM -Name 'web-01' -ResourceGroupName 'prod-rg'\nSet-AzVMBootDiagnostics -VM $vm -Enable -ResourceGroupName 'prod-rg' -StorageAccountName 'stdiagprod'\nUpdate-AzVM -ResourceGroupName 'prod-rg' -VM $vm"}
{"instruction": "Create a resource group 'ops-rg-1' in 'eastus'.", "output": "New-AzResourceGroup -Name 'ops-rg-1' -Location 'eastus'"}
{"instruction": "Delete the resource group 'ops-rg-1'.", "output": "Remove-AzResourceGroup -Name 'ops-rg-1' -Force"}
{"instruction": "List resources in the 'ops-rg-1' resource group.", "output": "Get-AzResource -ResourceGroupName 'ops-rg-1'"}
{"instruction": "Tag all resources in 'ops-rg-1' with env=dev.", "output": "Get-AzResource -ResourceGroupName 'ops-rg-1' | ForEach-Object { Update-AzTag -ResourceId $_.ResourceId -Operation Merge -Tag @{ env = 'dev' } }"}
{"instruction": "Create a resource group 'ops-rg-2' in 'eastus2'.", "output": "New-AzResourceGroup -Name 'ops-rg-2' -Location 'eastus2'"}
{"instruction": "Delete the resource group 'ops-rg-2'.", "output": "Remove-AzResourceGroup -Name 'ops-rg-2' -Force"}
{"instruction": "List resources in the 'ops-rg-2' resource group.", "output": "Get-AzResource -ResourceGroupName 'ops-rg-2'"}
{"instruction": "Tag all resources in 'ops-rg-2' with env=dev.", "output": "Get-AzResource -ResourceGroupName 'ops-rg-2' | ForEach-Object { Update-AzTag -ResourceId $_.ResourceId -Operation Merge -Tag @{ env = 'dev' } }"}
{"instruction": "Create a resource group 'ops-rg-3' in 'westus'.", "output": "New-AzResourceGroup -Name 'ops-rg-3' -Location 'westus'"}
{"instruction": "Delete the resource group 'ops-rg-3'.", "output": "Remove-AzResourceGroup -Name 'ops-rg-3' -Force"}
{"instruction": "List resources in the 'ops-rg-3' resource group.", "output": "Get-AzResource -ResourceGroupName 'ops-rg-3'"}
{"instruction": "Tag all resources in 'ops-rg-3' with env=dev.", "output": "Get-AzResource -ResourceGroupName 'ops-rg-3' | ForEach-Object { Update-AzTag -ResourceId $_.ResourceId -Operation Merge -Tag @{ env = 'dev' } }"}
{"instruction": "Create a resource group 'ops-rg-4' in 'westus2'.", "output": "New-AzResourceGroup -Name 'ops-rg-4' -Location 'westus2'"}
{"instruction": "Delete the resource group 'ops-rg-4'.", "output": "Remove-AzResourceGroup -Name 'ops-rg-4' -Force"}
{"instruction": "List resources in the 'ops-rg-4' resource group.", "output": "Get-AzResource -ResourceGroupName 'ops-rg-4'"}
{"instruction": "Tag all resources in 'ops-rg-4' with env=dev.", "output": "Get-AzResource -ResourceGroupName 'ops-rg-4' | ForEach-Object { Update-AzTag -ResourceId $_.ResourceId -Operation Merge -Tag @{ env = 'dev' } }"}
{"instruction": "Create a resource group 'ops-rg-5' in 'centralus'.", "output": "New-AzResourceGroup -Name 'ops-rg-5' -Location 'centralus'"}
{"instruction": "Delete the resource group 'ops-rg-5'.", "output": "Remove-AzResourceGroup -Name 'ops-rg-5' -Force"}
{"instruction": "List resources in the 'ops-rg-5' resource group.", "output": "Get-AzResource -ResourceGroupName 'ops-rg-5'"}
{"instruction": "Tag all resources in 'ops-rg-5' with env=dev.", "output": "Get-AzResource -ResourceGroupName 'ops-rg-5' | ForEach-Object { Update-AzTag -ResourceId $_.ResourceId -Operation Merge -Tag @{ env = 'dev' } }"}
{"instruction": "Create a resource group 'ops-rg-6' in 'uksouth'.", "output": "New-AzResourceGroup -Name 'ops-rg-6' -Location 'uksouth'"}
{"instruction": "Delete the resource group 'ops-rg-6'.", "output": "Remove-AzResourceGroup -Name 'ops-rg-6' -Force"}
{"instruction": "List resources in the 'ops-rg-6' resource group.", "output": "Get-AzResource -ResourceGroupName 'ops-rg-6'"}
{"instruction": "Tag all resources in 'ops-rg-6' with env=dev.", "output": "Get-AzResource -ResourceGroupName 'ops-rg-6' | ForEach-Object { Update-AzTag -ResourceId $_.ResourceId -Operation Merge -Tag @{ env = 'dev' } }"}
{"instruction": "Create a resource group 'ops-rg-7' in 'northeurope'.", "output": "New-AzResourceGroup -Name 'ops-rg-7' -Location 'northeurope'"}
{"instruction": "Delete the resource group 'ops-rg-7'.", "output": "Remove-AzResourceGroup -Name 'ops-rg-7' -Force"}
{"instruction": "List resources in the 'ops-rg-7' resource group.", "output": "Get-AzResource -ResourceGroupName 'ops-rg-7'"}
{"instruction": "Tag all resources in 'ops-rg-7' with env=dev.", "output": "Get-AzResource -ResourceGroupName 'ops-rg-7' | ForEach-Object { Update-AzTag -ResourceId $_.ResourceId -Operation Merge -Tag @{ env = 'dev' } }"}
{"instruction": "Create a resource group 'ops-rg-8' in 'westeurope'.", "output": "New-AzResourceGroup -Name 'ops-rg-8' -Location 'westeurope'"}
{"instruction": "Delete the resource group 'ops-rg-8'.", "output": "Remove-AzResourceGroup -Name 'ops-rg-8' -Force"}
{"instruction": "List resources in the 'ops-rg-8' resource group.", "output": "Get-AzResource -ResourceGroupName 'ops-rg-8'"}
{"instruction": "Tag all resources in 'ops-rg-8' with env=dev.", "output": "Get-AzResource -ResourceGroupName 'ops-rg-8' | ForEach-Object { Update-AzTag -ResourceId $_.ResourceId -Operation Merge -Tag @{ env = 'dev' } }"}
{"instruction": "Create a resource group 'ops-rg-9' in 'southeastasia'.", "output": "New-AzResourceGroup -Name 'ops-rg-9' -Location 'southeastasia'"}
{"instruction": "Delete the resource group 'ops-rg-9'.", "output": "Remove-AzResourceGroup -Name 'ops-rg-9' -Force"}
{"instruction": "List resources in the 'ops-rg-9' resource group.", "output": "Get-AzResource -ResourceGroupName 'ops-rg-9'"}
{"instruction": "Tag all resources in 'ops-rg-9' with env=dev.", "output": "Get-AzResource -ResourceGroupName 'ops-rg-9' | ForEach-Object { Update-AzTag -ResourceId $_.ResourceId -Operation Merge -Tag @{ env = 'dev' } }"}
{"instruction": "Create a resource group 'ops-rg-10' in 'australiaeast'.", "output": "New-AzResourceGroup -Name 'ops-rg-10' -Location 'australiaeast'"}
{"instruction": "Delete the resource group 'ops-rg-10'.", "output": "Remove-AzResourceGroup -Name 'ops-rg-10' -Force"}
{"instruction": "List resources in the 'ops-rg-10' resource group.", "output": "Get-AzResource -ResourceGroupName 'ops-rg-10'"}
{"instruction": "Tag all resources in 'ops-rg-10' with env=dev.", "output": "Get-AzResource -ResourceGroupName 'ops-rg-10' | ForEach-Object { Update-AzTag -ResourceId $_.ResourceId -Operation Merge -Tag @{ env = 'dev' } }"}
{"instruction": "Create a Linux VM 'app-vm-01' in 'app-rg-1' (eastus) with size 'Standard_D2s_v5'.", "output": "New-AzVM -ResourceGroupName 'app-rg-1' -Location 'eastus' -Name 'app-vm-01' -Size 'Standard_D2s_v5' -Image 'Canonical:0001-com-ubuntu-server-jammy:22_04-lts:latest' -GenerateSshKey"}
{"instruction": "Start the VM 'app-vm-01' in 'app-rg-1'.", "output": "Start-AzVM -Name 'app-vm-01' -ResourceGroupName 'app-rg-1'"}
{"instruction": "Stop and deallocate the VM 'app-vm-01' in 'app-rg-1'.", "output": "Stop-AzVM -Name 'app-vm-01' -ResourceGroupName 'app-rg-1' -Force"}
{"instruction": "Restart the VM 'app-vm-01' in 'app-rg-1'.", "output": "Restart-AzVM -Name 'app-vm-01' -ResourceGroupName 'app-rg-1'"}
{"instruction": "Resize the VM 'app-vm-01' in 'app-rg-1' to 'Standard_D2s_v5'.", "output": "$vm = Get-AzVM -Name 'app-vm-01' -ResourceGroupName 'app-rg-1'\n$vm.HardwareProfile.VmSize = 'Standard_D2s_v5'\nUpdate-AzVM -ResourceGroupName 'app-rg-1' -VM $vm"}
{"instruction": "Attach a 128GB data disk to VM 'app-vm-01' in 'app-rg-1'.", "output": "$vm = Get-AzVM -Name 'app-vm-01' -ResourceGroupName 'app-rg-1'\nAdd-AzVMDataDisk -VM $vm -Name 'app-vm-01-data1' -Lun 1 -CreateOption Empty -DiskSizeInGB 128\nUpdate-AzVM -ResourceGroupName 'app-rg-1' -VM $vm"}
{"instruction": "Enable boot diagnostics on VM 'app-vm-01' in 'app-rg-1' using 'stdiag001'.", "output": "$vm = Get-AzVM -Name 'app-vm-01' -ResourceGroupName 'app-rg-1'\nSet-AzVMBootDiagnostics -VM $vm -Enable -ResourceGroupName 'app-rg-1' -StorageAccountName 'stdiag001'\nUpdate-AzVM -ResourceGroupName 'app-rg-1' -VM $vm"}
{"instruction": "Create a Linux VM 'app-vm-02' in 'app-rg-2' (eastus) with size 'Standard_D4s_v5'.", "output": "New-AzVM -ResourceGroupName 'app-rg-2' -Location 'eastus' -Name 'app-vm-02' -Size 'Standard_D4s_v5' -Image 'Canonical:0001-com-ubuntu-server-jammy:22_04-lts:latest' -GenerateSshKey"}
{"instruction": "Start the VM 'app-vm-02' in 'app-rg-2'.", "output": "Start-AzVM -Name 'app-vm-02' -ResourceGroupName 'app-rg-2'"}
{"instruction": "Stop and deallocate the VM 'app-vm-02' in 'app-rg-2'.", "output": "Stop-AzVM -Name 'app-vm-02' -ResourceGroupName 'app-rg-2' -Force"}
{"instruction": "Restart the VM 'app-vm-02' in 'app-rg-2'.", "output": "Restart-AzVM -Name 'app-vm-02' -ResourceGroupName 'app-rg-2'"}
{"instruction": "Resize the VM 'app-vm-02' in 'app-rg-2' to 'Standard_D4s_v5'.", "output": "$vm = Get-AzVM -Name 'app-vm-02' -ResourceGroupName 'app-rg-2'\n$vm.HardwareProfile.VmSize = 'Standard_D4s_v5'\nUpdate-AzVM -ResourceGroupName 'app-rg-2' -VM $vm"}
{"instruction": "Attach a 128GB data disk to VM 'app-vm-02' in 'app-rg-2'.", "output": "$vm = Get-AzVM -Name 'app-vm-02' -ResourceGroupName 'app-rg-2'\nAdd-AzVMDataDisk -VM $vm -Name 'app-vm-02-data1' -Lun 1 -CreateOption Empty -DiskSizeInGB 128\nUpdate-AzVM -ResourceGroupName 'app-rg-2' -VM $vm"}
{"instruction": "Enable boot diagnostics on VM 'app-vm-02' in 'app-rg-2' using 'stdiag002'.", "output": "$vm = Get-AzVM -Name 'app-vm-02' -ResourceGroupName 'app-rg-2'\nSet-AzVMBootDiagnostics -VM $vm -Enable -ResourceGroupName 'app-rg-2' -StorageAccountName 'stdiag002'\nUpdate-AzVM -ResourceGroupName 'app-rg-2' -VM $vm"}
{"instruction": "Create a Linux VM 'app-vm-03' in 'app-rg-3' (eastus) with size 'Standard_B2s'.", "output": "New-AzVM -ResourceGroupName 'app-rg-3' -Location 'eastus' -Name 'app-vm-03' -Size 'Standard_B2s' -Image 'Canonical:0001-com-ubuntu-server-jammy:22_04-lts:latest' -GenerateSshKey"}
{"instruction": "Start the VM 'app-vm-03' in 'app-rg-3'.", "output": "Start-AzVM -Name 'app-vm-03' -ResourceGroupName 'app-rg-3'"}
{"instruction": "Stop and deallocate the VM 'app-vm-03' in 'app-rg-3'.", "output": "Stop-AzVM -Name 'app-vm-03' -ResourceGroupName 'app-rg-3' -Force"}
{"instruction": "Restart the VM 'app-vm-03' in 'app-rg-3'.", "output": "Restart-AzVM -Name 'app-vm-03' -ResourceGroupName 'app-rg-3'"}
{"instruction": "Resize the VM 'app-vm-03' in 'app-rg-3' to 'Standard_B2s'.", "output": "$vm = Get-AzVM -Name 'app-vm-03' -ResourceGroupName 'app-rg-3'\n$vm.HardwareProfile.VmSize = 'Standard_B2s'\nUpdate-AzVM -ResourceGroupName 'app-rg-3' -VM $vm"}
{"instruction": "Attach a 128GB data disk to VM 'app-vm-03' in 'app-rg-3'.", "output": "$vm = Get-AzVM -Name 'app-vm-03' -ResourceGroupName 'app-rg-3'\nAdd-AzVMDataDisk -VM $vm -Name 'app-vm-03-data1' -Lun 1 -CreateOption Empty -DiskSizeInGB 128\nUpdate-AzVM -ResourceGroupName 'app-rg-3' -VM $vm"}
{"instruction": "Enable boot diagnostics on VM 'app-vm-03' in 'app-rg-3' using 'stdiag003'.", "output": "$vm = Get-AzVM -Name 'app-vm-03' -ResourceGroupName 'app-rg-3'\nSet-AzVMBootDiagnostics -VM $vm -Enable -ResourceGroupName 'app-rg-3' -StorageAccountName 'stdiag003'\nUpdate-AzVM -ResourceGroupName 'app-rg-3' -VM $vm"}
{"instruction": "Create a Linux VM 'app-vm-04' in 'app-rg-4' (eastus) with size 'Standard_D2s_v5'.", "output": "New-AzVM -ResourceGroupName 'app-rg-4' -Location 'eastus' -Name 'app-vm-04' -Size 'Standard_D2s_v5' -Image 'Canonical:0001-com-ubuntu-server-jammy:22_04-lts:latest' -GenerateSshKey"}
{"instruction": "Start the VM 'app-vm-04' in 'app-rg-4'.", "output": "Start-AzVM -Name 'app-vm-04' -ResourceGroupName 'app-rg-4'"}
{"instruction": "Stop and deallocate the VM 'app-vm-04' in 'app-rg-4'.", "output": "Stop-AzVM -Name 'app-vm-04' -ResourceGroupName 'app-rg-4' -Force"}
{"instruction": "Restart the VM 'app-vm-04' in 'app-rg-4'.", "output": "Restart-AzVM -Name 'app-vm-04' -ResourceGroupName 'app-rg-4'"}
{"instruction": "Resize the VM 'app-vm-04' in 'app-rg-4' to 'Standard_D2s_v5'.", "output": "$vm = Get-AzVM -Name 'app-vm-04' -ResourceGroupName 'app-rg-4'\n$vm.HardwareProfile.VmSize = 'Standard_D2s_v5'\nUpdate-AzVM -ResourceGroupName 'app-rg-4' -VM $vm"}
{"instruction": "Attach a 128GB data disk to VM 'app-vm-04' in 'app-rg-4'.", "output": "$vm = Get-AzVM -Name 'app-vm-04' -ResourceGroupName 'app-rg-4'\nAdd-AzVMDataDisk -VM $vm -Name 'app-vm-04-data1' -Lun 1 -CreateOption Empty -DiskSizeInGB 128\nUpdate-AzVM -ResourceGroupName 'app-rg-4' -VM $vm"}
{"instruction": "Enable boot diagnostics on VM 'app-vm-04' in 'app-rg-4' using 'stdiag004'.", "output": "$vm = Get-AzVM -Name 'app-vm-04' -ResourceGroupName 'app-rg-4'\nSet-AzVMBootDiagnostics -VM $vm -Enable -ResourceGroupName 'app-rg-4' -StorageAccountName 'stdiag004'\nUpdate-AzVM -ResourceGroupName 'app-rg-4' -VM $vm"}
{"instruction": "Create a Linux VM 'app-vm-05' in 'app-rg-5' (eastus) with size 'Standard_D4s_v5'.", "output": "New-AzVM -ResourceGroupName 'app-rg-5' -Location 'eastus' -Name 'app-vm-05' -Size 'Standard_D4s_v5' -Image 'Canonical:0001-com-ubuntu-server-jammy:22_04-lts:latest' -GenerateSshKey"}
{"instruction": "Start the VM 'app-vm-05' in 'app-rg-5'.", "output": "Start-AzVM -Name 'app-vm-05' -ResourceGroupName 'app-rg-5'"}
{"instruction": "Stop and deallocate the VM 'app-vm-05' in 'app-rg-5'.", "output": "Stop-AzVM -Name 'app-vm-05' -ResourceGroupName 'app-rg-5' -Force"}
{"instruction": "Restart the VM 'app-vm-05' in 'app-rg-5'.", "output": "Restart-AzVM -Name 'app-vm-05' -ResourceGroupName 'app-rg-5'"}
{"instruction": "Resize the VM 'app-vm-05' in 'app-rg-5' to 'Standard_D4s_v5'.", "output": "$vm = Get-AzVM -Name 'app-vm-05' -ResourceGroupName 'app-rg-5'\n$vm.HardwareProfile.VmSize = 'Standard_D4s_v5'\nUpdate-AzVM -ResourceGroupName 'app-rg-5' -VM $vm"}
{"instruction": "Attach a 128GB data disk to VM 'app-vm-05' in 'app-rg-5'.", "output": "$vm = Get-AzVM -Name 'app-vm-05' -ResourceGroupName 'app-rg-5'\nAdd-AzVMDataDisk -VM $vm -Name 'app-vm-05-data1' -Lun 1 -CreateOption Empty -DiskSizeInGB 128\nUpdate-AzVM -ResourceGroupName 'app-rg-5' -VM $vm"}
{"instruction": "Enable boot diagnostics on VM 'app-vm-05' in 'app-rg-5' using 'stdiag005'.", "output": "$vm = Get-AzVM -Name 'app-vm-05' -ResourceGroupName 'app-rg-5'\nSet-AzVMBootDiagnostics -VM $vm -Enable -ResourceGroupName 'app-rg-5' -StorageAccountName 'stdiag005'\nUpdate-AzVM -ResourceGroupName 'app-rg-5' -VM $vm"}
{"instruction": "Create a Linux VM 'app-vm-06' in 'app-rg-6' (eastus) with size 'Standard_B2s'.", "output": "New-AzVM -ResourceGroupName 'app-rg-6' -Location 'eastus' -Name 'app-vm-06' -Size 'Standard_B2s' -Image 'Canonical:0001-com-ubuntu-server-jammy:22_04-lts:latest' -GenerateSshKey"}
{"instruction": "Start the VM 'app-vm-06' in 'app-rg-6'.", "output": "Start-AzVM -Name 'app-vm-06' -ResourceGroupName 'app-rg-6'"}
{"instruction": "Stop and deallocate the VM 'app-vm-06' in 'app-rg-6'.", "output": "Stop-AzVM -Name 'app-vm-06' -ResourceGroupName 'app-rg-6' -Force"}
{"instruction": "Restart the VM 'app-vm-06' in 'app-rg-6'.", "output": "Restart-AzVM -Name 'app-vm-06' -ResourceGroupName 'app-rg-6'"}
{"instruction": "Resize the VM 'app-vm-06' in 'app-rg-6' to 'Standard_B2s'.", "output": "$vm = Get-AzVM -Name 'app-vm-06' -ResourceGroupName 'app-rg-6'\n$vm.HardwareProfile.VmSize = 'Standard_B2s'\nUpdate-AzVM -ResourceGroupName 'app-rg-6' -VM $vm"}
{"instruction": "Attach a 128GB data disk to VM 'app-vm-06' in 'app-rg-6'.", "output": "$vm = Get-AzVM -Name 'app-vm-06' -ResourceGroupName 'app-rg-6'\nAdd-AzVMDataDisk -VM $vm -Name 'app-vm-06-data1' -Lun 1 -CreateOption Empty -DiskSizeInGB 128\nUpdate-AzVM -ResourceGroupName 'app-rg-6' -VM $vm"}
{"instruction": "Enable boot diagnostics on VM 'app-vm-06' in 'app-rg-6' using 'stdiag006'.", "output": "$vm = Get-AzVM -Name 'app-vm-06' -ResourceGroupName 'app-rg-6'\nSet-AzVMBootDiagnostics -VM $vm -Enable -ResourceGroupName 'app-rg-6' -StorageAccountName 'stdiag006'\nUpdate-AzVM -ResourceGroupName 'app-rg-6' -VM $vm"}
{"instruction": "Create a Linux VM 'app-vm-07' in 'app-rg-7' (eastus) with size 'Standard_D2s_v5'.", "output": "New-AzVM -ResourceGroupName 'app-rg-7' -Location 'eastus' -Name 'app-vm-07' -Size 'Standard_D2s_v5' -Image 'Canonical:0001-com-ubuntu-server-jammy:22_04-lts:latest' -GenerateSshKey"}
{"instruction": "Start the VM 'app-vm-07' in 'app-rg-7'.", "output": "Start-AzVM -Name 'app-vm-07' -ResourceGroupName 'app-rg-7'"}
{"instruction": "Stop and deallocate the VM 'app-vm-07' in 'app-rg-7'.", "output": "Stop-AzVM -Name 'app-vm-07' -ResourceGroupName 'app-rg-7' -Force"}
{"instruction": "Restart the VM 'app-vm-07' in 'app-rg-7'.", "output": "Restart-AzVM -Name 'app-vm-07' -ResourceGroupName 'app-rg-7'"}
{"instruction": "Resize the VM 'app-vm-07' in 'app-rg-7' to 'Standard_D2s_v5'.", "output": "$vm = Get-AzVM -Name 'app-vm-07' -ResourceGroupName 'app-rg-7'\n$vm.HardwareProfile.VmSize = 'Standard_D2s_v5'\nUpdate-AzVM -ResourceGroupName 'app-rg-7' -VM $vm"}
{"instruction": "Attach a 128GB data disk to VM 'app-vm-07' in 'app-rg-7'.", "output": "$vm = Get-AzVM -Name 'app-vm-07' -ResourceGroupName 'app-rg-7'\nAdd-AzVMDataDisk -VM $vm -Name 'app-vm-07-data1' -Lun 1 -CreateOption Empty -DiskSizeInGB 128\nUpdate-AzVM -ResourceGroupName 'app-rg-7' -VM $vm"}
{"instruction": "Enable boot diagnostics on VM 'app-vm-07' in 'app-rg-7' using 'stdiag007'.", "output": "$vm = Get-AzVM -Name 'app-vm-07' -ResourceGroupName 'app-rg-7'\nSet-AzVMBootDiagnostics -VM $vm -Enable -ResourceGroupName 'app-rg-7' -StorageAccountName 'stdiag007'\nUpdate-AzVM -ResourceGroupName 'app-rg-7' -VM $vm"}
{"instruction": "Create a Linux VM 'app-vm-08' in 'app-rg-8' (eastus) with size 'Standard_D4s_v5'.", "output": "New-AzVM -ResourceGroupName 'app-rg-8' -Location 'eastus' -Name 'app-vm-08' -Size 'Standard_D4s_v5' -Image 'Canonical:0001-com-ubuntu-server-jammy:22_04-lts:latest' -GenerateSshKey"}
{"instruction": "Start the VM 'app-vm-08' in 'app-rg-8'.", "output": "Start-AzVM -Name 'app-vm-08' -ResourceGroupName 'app-rg-8'"}
{"instruction": "Stop and deallocate the VM 'app-vm-08' in 'app-rg-8'.", "output": "Stop-AzVM -Name 'app-vm-08' -ResourceGroupName 'app-rg-8' -Force"}
{"instruction": "Restart the VM 'app-vm-08' in 'app-rg-8'.", "output": "Restart-AzVM -Name 'app-vm-08' -ResourceGroupName 'app-rg-8'"}
{"instruction": "Resize the VM 'app-vm-08' in 'app-rg-8' to 'Standard_D4s_v5'.", "output": "$vm = Get-AzVM -Name 'app-vm-08' -ResourceGroupName 'app-rg-8'\n$vm.HardwareProfile.VmSize = 'Standard_D4s_v5'\nUpdate-AzVM -ResourceGroupName 'app-rg-8' -VM $vm"}
{"instruction": "Attach a 128GB data disk to VM 'app-vm-08' in 'app-rg-8'.", "output": "$vm = Get-AzVM -Name 'app-vm-08' -ResourceGroupName 'app-rg-8'\nAdd-AzVMDataDisk -VM $vm -Name 'app-vm-08-data1' -Lun 1 -CreateOption Empty -DiskSizeInGB 128\nUpdate-AzVM -ResourceGroupName 'app-rg-8' -VM $vm"}
{"instruction": "Enable boot diagnostics on VM 'app-vm-08' in 'app-rg-8' using 'stdiag008'.", "output": "$vm = Get-AzVM -Name 'app-vm-08' -ResourceGroupName 'app-rg-8'\nSet-AzVMBootDiagnostics -VM $vm -Enable -ResourceGroupName 'app-rg-8' -StorageAccountName 'stdiag008'\nUpdate-AzVM -ResourceGroupName 'app-rg-8' -VM $vm"}
{"instruction": "Create a Linux VM 'app-vm-09' in 'app-rg-9' (eastus) with size 'Standard_B2s'.", "output": "New-AzVM -ResourceGroupName 'app-rg-9' -Location 'eastus' -Name 'app-vm-09' -Size 'Standard_B2s' -Image 'Canonical:0001-com-ubuntu-server-jammy:22_04-lts:latest' -GenerateSshKey"}
{"instruction": "Start the VM 'app-vm-09' in 'app-rg-9'.", "output": "Start-AzVM -Name 'app-vm-09' -ResourceGroupName 'app-rg-9'"}
{"instruction": "Stop and deallocate the VM 'app-vm-09' in 'app-rg-9'.", "output": "Stop-AzVM -Name 'app-vm-09' -ResourceGroupName 'app-rg-9' -Force"}
{"instruction": "Restart the VM 'app-vm-09' in 'app-rg-9'.", "output": "Restart-AzVM -Name 'app-vm-09' -ResourceGroupName 'app-rg-9'"}
{"instruction": "Resize the VM 'app-vm-09' in 'app-rg-9' to 'Standard_B2s'.", "output": "$vm = Get-AzVM -Name 'app-vm-09' -ResourceGroupName 'app-rg-9'\n$vm.HardwareProfile.VmSize = 'Standard_B2s'\nUpdate-AzVM -ResourceGroupName 'app-rg-9' -VM $vm"}
{"instruction": "Attach a 128GB data disk to VM 'app-vm-09' in 'app-rg-9'.", "output": "$vm = Get-AzVM -Name 'app-vm-09' -ResourceGroupName 'app-rg-9'\nAdd-AzVMDataDisk -VM $vm -Name 'app-vm-09-data1' -Lun 1 -CreateOption Empty -DiskSizeInGB 128\nUpdate-AzVM -ResourceGroupName 'app-rg-9' -VM $vm"}
{"instruction": "Enable boot diagnostics on VM 'app-vm-09' in 'app-rg-9' using 'stdiag009'.", "output": "$vm = Get-AzVM -Name 'app-vm-09' -ResourceGroupName 'app-rg-9'\nSet-AzVMBootDiagnostics -VM $vm -Enable -ResourceGroupName 'app-rg-9' -StorageAccountName 'stdiag009'\nUpdate-AzVM -ResourceGroupName 'app-rg-9' -VM $vm"}
{"instruction": "Create a Linux VM 'app-vm-10' in 'app-rg-10' (eastus) with size 'Standard_D2s_v5'.", "output": "New-AzVM -ResourceGroupName 'app-rg-10' -Location 'eastus' -Name 'app-vm-10' -Size 'Standard_D2s_v5' -Image 'Canonical:0001-com-ubuntu-server-jammy:22_04-lts:latest' -GenerateSshKey"}
{"instruction": "Start the VM 'app-vm-10' in 'app-rg-10'.", "output": "Start-AzVM -Name 'app-vm-10' -ResourceGroupName 'app-rg-10'"}
{"instruction": "Stop and deallocate the VM 'app-vm-10' in 'app-rg-10'.", "output": "Stop-AzVM -Name 'app-vm-10' -ResourceGroupName 'app-rg-10' -Force"}
{"instruction": "Restart the VM 'app-vm-10' in 'app-rg-10'.", "output": "Restart-AzVM -Name 'app-vm-10' -ResourceGroupName 'app-rg-10'"}
{"instruction": "Resize the VM 'app-vm-10' in 'app-rg-10' to 'Standard_D2s_v5'.", "output": "$vm = Get-AzVM -Name 'app-vm-10' -ResourceGroupName 'app-rg-10'\n$vm.HardwareProfile.VmSize = 'Standard_D2s_v5'\nUpdate-AzVM -ResourceGroupName 'app-rg-10' -VM $vm"}
{"instruction": "Attach a 128GB data disk to VM 'app-vm-10' in 'app-rg-10'.", "output": "$vm = Get-AzVM -Name 'app-vm-10' -ResourceGroupName 'app-rg-10'\nAdd-AzVMDataDisk -VM $vm -Name 'app-vm-10-data1' -Lun 1 -CreateOption Empty -DiskSizeInGB 128\nUpdate-AzVM -ResourceGroupName 'app-rg-10' -VM $vm"}
{"instruction": "Enable boot diagnostics on VM 'app-vm-10' in 'app-rg-10' using 'stdiag010'.", "output": "$vm = Get-AzVM -Name 'app-vm-10' -ResourceGroupName 'app-rg-10'\nSet-AzVMBootDiagnostics -VM $vm -Enable -ResourceGroupName 'app-rg-10' -StorageAccountName 'stdiag010'\nUpdate-AzVM -ResourceGroupName 'app-rg-10' -VM $vm"}
{"instruction": "Create a Linux VM 'app-vm-11' in 'app-rg-11' (eastus) with size 'Standard_D4s_v5'.", "output": "New-AzVM -ResourceGroupName 'app-rg-11' -Location 'eastus' -Name 'app-vm-11' -Size 'Standard_D4s_v5' -Image 'Canonical:0001-com-ubuntu-server-jammy:22_04-lts:latest' -GenerateSshKey"}
{"instruction": "Start the VM 'app-vm-11' in 'app-rg-11'.", "output": "Start-AzVM -Name 'app-vm-11' -ResourceGroupName 'app-rg-11'"}
{"instruction": "Stop and deallocate the VM 'app-vm-11' in 'app-rg-11'.", "output": "Stop-AzVM -Name 'app-vm-11' -ResourceGroupName 'app-rg-11' -Force"}
{"instruction": "Restart the VM 'app-vm-11' in 'app-rg-11'.", "output": "Restart-AzVM -Name 'app-vm-11' -ResourceGroupName 'app-rg-11'"}
{"instruction": "Resize the VM 'app-vm-11' in 'app-rg-11' to 'Standard_D4s_v5'.", "output": "$vm = Get-AzVM -Name 'app-vm-11' -ResourceGroupName 'app-rg-11'\n$vm.HardwareProfile.VmSize = 'Standard_D4s_v5'\nUpdate-AzVM -ResourceGroupName 'app-rg-11' -VM $vm"}
{"instruction": "Attach a 128GB data disk to VM 'app-vm-11' in 'app-rg-11'.", "output": "$vm = Get-AzVM -Name 'app-vm-11' -ResourceGroupName 'app-rg-11'\nAdd-AzVMDataDisk -VM $vm -Name 'app-vm-11-data1' -Lun 1 -CreateOption Empty -DiskSizeInGB 128\nUpdate-AzVM -ResourceGroupName 'app-rg-11' -VM $vm"}
{"instruction": "Enable boot diagnostics on VM 'app-vm-11' in 'app-rg-11' using 'stdiag011'.", "output": "$vm = Get-AzVM -Name 'app-vm-11' -ResourceGroupName 'app-rg-11'\nSet-AzVMBootDiagnostics -VM $vm -Enable -ResourceGroupName 'app-rg-11' -StorageAccountName 'stdiag011'\nUpdate-AzVM -ResourceGroupName 'app-rg-11' -VM $vm"}
{"instruction": "Create a Linux VM 'app-vm-12' in 'app-rg-12' (eastus) with size 'Standard_B2s'.", "output": "New-AzVM -ResourceGroupName 'app-rg-12' -Location 'eastus' -Name 'app-vm-12' -Size 'Standard_B2s' -Image 'Canonical:0001-com-ubuntu-server-jammy:22_04-lts:latest' -GenerateSshKey"}
{"instruction": "Start the VM 'app-vm-12' in 'app-rg-12'.", "output": "Start-AzVM -Name 'app-vm-12' -ResourceGroupName 'app-rg-12'"}
{"instruction": "Stop and deallocate the VM 'app-vm-12' in 'app-rg-12'.", "output": "Stop-AzVM -Name 'app-vm-12' -ResourceGroupName 'app-rg-12' -Force"}
{"instruction": "Restart the VM 'app-vm-12' in 'app-rg-12'.", "output": "Restart-AzVM -Name 'app-vm-12' -ResourceGroupName 'app-rg-12'"}
{"instruction": "Resize the VM 'app-vm-12' in 'app-rg-12' to 'Standard_B2s'.", "output": "$vm = Get-AzVM -Name 'app-vm-12' -ResourceGroupName 'app-rg-12'\n$vm.HardwareProfile.VmSize = 'Standard_B2s'\nUpdate-AzVM -ResourceGroupName 'app-rg-12' -VM $vm"}
{"instruction": "Attach a 128GB data disk to VM 'app-vm-12' in 'app-rg-12'.", "output": "$vm = Get-AzVM -Name 'app-vm-12' -ResourceGroupName 'app-rg-12'\nAdd-AzVMDataDisk -VM $vm -Name 'app-vm-12-data1' -Lun 1 -CreateOption Empty -DiskSizeInGB 128\nUpdate-AzVM -ResourceGroupName 'app-rg-12' -VM $vm"}
{"instruction": "Enable boot diagnostics on VM 'app-vm-12' in 'app-rg-12' using 'stdiag012'.", "output": "$vm = Get-AzVM -Name 'app-vm-12' -ResourceGroupName 'app-rg-12'\nSet-AzVMBootDiagnostics -VM $vm -Enable -ResourceGroupName 'app-rg-12' -StorageAccountName 'stdiag012'\nUpdate-AzVM -ResourceGroupName 'app-rg-12' -VM $vm"}
{"instruction": "Create a Linux VM 'app-vm-13' in 'app-rg-13' (eastus) with size 'Standard_D2s_v5'.", "output": "New-AzVM -ResourceGroupName 'app-rg-13' -Location 'eastus' -Name 'app-vm-13' -Size 'Standard_D2s_v5' -Image 'Canonical:0001-com-ubuntu-server-jammy:22_04-lts:latest' -GenerateSshKey"}
{"instruction": "Start the VM 'app-vm-13' in 'app-rg-13'.", "output": "Start-AzVM -Name 'app-vm-13' -ResourceGroupName 'app-rg-13'"}
{"instruction": "Stop and deallocate the VM 'app-vm-13' in 'app-rg-13'.", "output": "Stop-AzVM -Name 'app-vm-13' -ResourceGroupName 'app-rg-13' -Force"}
{"instruction": "Restart the VM 'app-vm-13' in 'app-rg-13'.", "output": "Restart-AzVM -Name 'app-vm-13' -ResourceGroupName 'app-rg-13'"}
{"instruction": "Resize the VM 'app-vm-13' in 'app-rg-13' to 'Standard_D2s_v5'.", "output": "$vm = Get-AzVM -Name 'app-vm-13' -ResourceGroupName 'app-rg-13'\n$vm.HardwareProfile.VmSize = 'Standard_D2s_v5'\nUpdate-AzVM -ResourceGroupName 'app-rg-13' -VM $vm"}
{"instruction": "Attach a 128GB data disk to VM 'app-vm-13' in 'app-rg-13'.", "output": "$vm = Get-AzVM -Name 'app-vm-13' -ResourceGroupName 'app-rg-13'\nAdd-AzVMDataDisk -VM $vm -Name 'app-vm-13-data1' -Lun 1 -CreateOption Empty -DiskSizeInGB 128\nUpdate-AzVM -ResourceGroupName 'app-rg-13' -VM $vm"}
{"instruction": "Enable boot diagnostics on VM 'app-vm-13' in 'app-rg-13' using 'stdiag013'.", "output": "$vm = Get-AzVM -Name 'app-vm-13' -ResourceGroupName 'app-rg-13'\nSet-AzVMBootDiagnostics -VM $vm -Enable -ResourceGroupName 'app-rg-13' -StorageAccountName 'stdiag013'\nUpdate-AzVM -ResourceGroupName 'app-rg-13' -VM $vm"}
{"instruction": "Create a Linux VM 'app-vm-14' in 'app-rg-14' (eastus) with size 'Standard_D4s_v5'.", "output": "New-AzVM -ResourceGroupName 'app-rg-14' -Location 'eastus' -Name 'app-vm-14' -Size 'Standard_D4s_v5' -Image 'Canonical:0001-com-ubuntu-server-jammy:22_04-lts:latest' -GenerateSshKey"}
{"instruction": "Start the VM 'app-vm-14' in 'app-rg-14'.", "output": "Start-AzVM -Name 'app-vm-14' -ResourceGroupName 'app-rg-14'"}
{"instruction": "Stop and deallocate the VM 'app-vm-14' in 'app-rg-14'.", "output": "Stop-AzVM -Name 'app-vm-14' -ResourceGroupName 'app-rg-14' -Force"}
{"instruction": "Restart the VM 'app-vm-14' in 'app-rg-14'.", "output": "Restart-AzVM -Name 'app-vm-14' -ResourceGroupName 'app-rg-14'"}
{"instruction": "Resize the VM 'app-vm-14' in 'app-rg-14' to 'Standard_D4s_v5'.", "output": "$vm = Get-AzVM -Name 'app-vm-14' -ResourceGroupName 'app-rg-14'\n$vm.HardwareProfile.VmSize = 'Standard_D4s_v5'\nUpdate-AzVM -ResourceGroupName 'app-rg-14' -VM $vm"}
{"instruction": "Attach a 128GB data disk to VM 'app-vm-14' in 'app-rg-14'.", "output": "$vm = Get-AzVM -Name 'app-vm-14' -ResourceGroupName 'app-rg-14'\nAdd-AzVMDataDisk -VM $vm -Name 'app-vm-14-data1' -Lun 1 -CreateOption Empty -DiskSizeInGB 128\nUpdate-AzVM -ResourceGroupName 'app-rg-14' -VM $vm"}
{"instruction": "Enable boot diagnostics on VM 'app-vm-14' in 'app-rg-14' using 'stdiag014'.", "output": "$vm = Get-AzVM -Name 'app-vm-14' -ResourceGroupName 'app-rg-14'\nSet-AzVMBootDiagnostics -VM $vm -Enable -ResourceGroupName 'app-rg-14' -StorageAccountName 'stdiag014'\nUpdate-AzVM -ResourceGroupName 'app-rg-14' -VM $vm"}
{"instruction": "Create a Linux VM 'app-vm-15' in 'app-rg-15' (eastus) with size 'Standard_B2s'.", "output": "New-AzVM -ResourceGroupName 'app-rg-15' -Location 'eastus' -Name 'app-vm-15' -Size 'Standard_B2s' -Image 'Canonical:0001-com-ubuntu-server-jammy:22_04-lts:latest' -GenerateSshKey"}
{"instruction": "Start the VM 'app-vm-15' in 'app-rg-15'.", "output": "Start-AzVM -Name 'app-vm-15' -ResourceGroupName 'app-rg-15'"}
{"instruction": "Stop and deallocate the VM 'app-vm-15' in 'app-rg-15'.", "output": "Stop-AzVM -Name 'app-vm-15' -ResourceGroupName 'app-rg-15' -Force"}
{"instruction": "Restart the VM 'app-vm-15' in 'app-rg-15'.", "output": "Restart-AzVM -Name 'app-vm-15' -ResourceGroupName 'app-rg-15'"}
{"instruction": "Resize the VM 'app-vm-15' in 'app-rg-15' to 'Standard_B2s'.", "output": "$vm = Get-AzVM -Name 'app-vm-15' -ResourceGroupName 'app-rg-15'\n$vm.HardwareProfile.VmSize = 'Standard_B2s'\nUpdate-AzVM -ResourceGroupName 'app-rg-15' -VM $vm"}
{"instruction": "Attach a 128GB data disk to VM 'app-vm-15' in 'app-rg-15'.", "output": "$vm = Get-AzVM -Name 'app-vm-15' -ResourceGroupName 'app-rg-15'\nAdd-AzVMDataDisk -VM $vm -Name 'app-vm-15-data1' -Lun 1 -CreateOption Empty -DiskSizeInGB 128\nUpdate-AzVM -ResourceGroupName 'app-rg-15' -VM $vm"}
{"instruction": "Enable boot diagnostics on VM 'app-vm-15' in 'app-rg-15' using 'stdiag015'.", "output": "$vm = Get-AzVM -Name 'app-vm-15' -ResourceGroupName 'app-rg-15'\nSet-AzVMBootDiagnostics -VM $vm -Enable -ResourceGroupName 'app-rg-15' -StorageAccountName 'stdiag015'\nUpdate-AzVM -ResourceGroupName 'app-rg-15' -VM $vm"}
{"instruction": "Create a Linux VM 'app-vm-16' in 'app-rg-16' (eastus) with size 'Standard_D2s_v5'.", "output": "New-AzVM -ResourceGroupName 'app-rg-16' -Location 'eastus' -Name 'app-vm-16' -Size 'Standard_D2s_v5' -Image 'Canonical:0001-com-ubuntu-server-jammy:22_04-lts:latest' -GenerateSshKey"}
{"instruction": "Start the VM 'app-vm-16' in 'app-rg-16'.", "output": "Start-AzVM -Name 'app-vm-16' -ResourceGroupName 'app-rg-16'"}
{"instruction": "Stop and deallocate the VM 'app-vm-16' in 'app-rg-16'.", "output": "Stop-AzVM -Name 'app-vm-16' -ResourceGroupName 'app-rg-16' -Force"}
{"instruction": "Restart the VM 'app-vm-16' in 'app-rg-16'.", "output": "Restart-AzVM -Name 'app-vm-16' -ResourceGroupName 'app-rg-16'"}
{"instruction": "Resize the VM 'app-vm-16' in 'app-rg-16' to 'Standard_D2s_v5'.", "output": "$vm = Get-AzVM -Name 'app-vm-16' -ResourceGroupName 'app-rg-16'\n$vm.HardwareProfile.VmSize = 'Standard_D2s_v5'\nUpdate-AzVM -ResourceGroupName 'app-rg-16' -VM $vm"}
{"instruction": "Attach a 128GB data disk to VM 'app-vm-16' in 'app-rg-16'.", "output": "$vm = Get-AzVM -Name 'app-vm-16' -ResourceGroupName 'app-rg-16'\nAdd-AzVMDataDisk -VM $vm -Name 'app-vm-16-data1' -Lun 1 -CreateOption Empty -DiskSizeInGB 128\nUpdate-AzVM -ResourceGroupName 'app-rg-16' -VM $vm"}
{"instruction": "Enable boot diagnostics on VM 'app-vm-16' in 'app-rg-16' using 'stdiag016'.", "output": "$vm = Get-AzVM -Name 'app-vm-16' -ResourceGroupName 'app-rg-16'\nSet-AzVMBootDiagnostics -VM $vm -Enable -ResourceGroupName 'app-rg-16' -StorageAccountName 'stdiag016'\nUpdate-AzVM -ResourceGroupName 'app-rg-16' -VM $vm"}
{"instruction": "Create a Linux VM 'app-vm-17' in 'app-rg-17' (eastus) with size 'Standard_D4s_v5'.", "output": "New-AzVM -ResourceGroupName 'app-rg-17' -Location 'eastus' -Name 'app-vm-17' -Size 'Standard_D4s_v5' -Image 'Canonical:0001-com-ubuntu-server-jammy:22_04-lts:latest' -GenerateSshKey"}
{"instruction": "Start the VM 'app-vm-17' in 'app-rg-17'.", "output": "Start-AzVM -Name 'app-vm-17' -ResourceGroupName 'app-rg-17'"}
{"instruction": "Stop and deallocate the VM 'app-vm-17' in 'app-rg-17'.", "output": "Stop-AzVM -Name 'app-vm-17' -ResourceGroupName 'app-rg-17' -Force"}
{"instruction": "Restart the VM 'app-vm-17' in 'app-rg-17'.", "output": "Restart-AzVM -Name 'app-vm-17' -ResourceGroupName 'app-rg-17'"}
{"instruction": "Resize the VM 'app-vm-17' in 'app-rg-17' to 'Standard_D4s_v5'.", "output": "$vm = Get-AzVM -Name 'app-vm-17' -ResourceGroupName 'app-rg-17'\n$vm.HardwareProfile.VmSize = 'Standard_D4s_v5'\nUpdate-AzVM -ResourceGroupName 'app-rg-17' -VM $vm"}
{"instruction": "Attach a 128GB data disk to VM 'app-vm-17' in 'app-rg-17'.", "output": "$vm = Get-AzVM -Name 'app-vm-17' -ResourceGroupName 'app-rg-17'\nAdd-AzVMDataDisk -VM $vm -Name 'app-vm-17-data1' -Lun 1 -CreateOption Empty -DiskSizeInGB 128\nUpdate-AzVM -ResourceGroupName 'app-rg-17' -VM $vm"}
{"instruction": "Enable boot diagnostics on VM 'app-vm-17' in 'app-rg-17' using 'stdiag017'.", "output": "$vm = Get-AzVM -Name 'app-vm-17' -ResourceGroupName 'app-rg-17'\nSet-AzVMBootDiagnostics -VM $vm -Enable -ResourceGroupName 'app-rg-17' -StorageAccountName 'stdiag017'\nUpdate-AzVM -ResourceGroupName 'app-rg-17' -VM $vm"}
{"instruction": "Create a Linux VM 'app-vm-18' in 'app-rg-18' (eastus) with size 'Standard_B2s'.", "output": "New-AzVM -ResourceGroupName 'app-rg-18' -Location 'eastus' -Name 'app-vm-18' -Size 'Standard_B2s' -Image 'Canonical:0001-com-ubuntu-server-jammy:22_04-lts:latest' -GenerateSshKey"}
{"instruction": "Start the VM 'app-vm-18' in 'app-rg-18'.", "output": "Start-AzVM -Name 'app-vm-18' -ResourceGroupName 'app-rg-18'"}
{"instruction": "Stop and deallocate the VM 'app-vm-18' in 'app-rg-18'.", "output": "Stop-AzVM -Name 'app-vm-18' -ResourceGroupName 'app-rg-18' -Force"}
{"instruction": "Restart the VM 'app-vm-18' in 'app-rg-18'.", "output": "Restart-AzVM -Name 'app-vm-18' -ResourceGroupName 'app-rg-18'"}
{"instruction": "Resize the VM 'app-vm-18' in 'app-rg-18' to 'Standard_B2s'.", "output": "$vm = Get-AzVM -Name 'app-vm-18' -ResourceGroupName 'app-rg-18'\n$vm.HardwareProfile.VmSize = 'Standard_B2s'\nUpdate-AzVM -ResourceGroupName 'app-rg-18' -VM $vm"}
{"instruction": "Attach a 128GB data disk to VM 'app-vm-18' in 'app-rg-18'.", "output": "$vm = Get-AzVM -Name 'app-vm-18' -ResourceGroupName 'app-rg-18'\nAdd-AzVMDataDisk -VM $vm -Name 'app-vm-18-data1' -Lun 1 -CreateOption Empty -DiskSizeInGB 128\nUpdate-AzVM -ResourceGroupName 'app-rg-18' -VM $vm"}
{"instruction": "Enable boot diagnostics on VM 'app-vm-18' in 'app-rg-18' using 'stdiag018'.", "output": "$vm = Get-AzVM -Name 'app-vm-18' -ResourceGroupName 'app-rg-18'\nSet-AzVMBootDiagnostics -VM $vm -Enable -ResourceGroupName 'app-rg-18' -StorageAccountName 'stdiag018'\nUpdate-AzVM -ResourceGroupName 'app-rg-18' -VM $vm"}
{"instruction": "Create a Linux VM 'app-vm-19' in 'app-rg-19' (eastus) with size 'Standard_D2s_v5'.", "output": "New-AzVM -ResourceGroupName 'app-rg-19' -Location 'eastus' -Name 'app-vm-19' -Size 'Standard_D2s_v5' -Image 'Canonical:0001-com-ubuntu-server-jammy:22_04-lts:latest' -GenerateSshKey"}
{"instruction": "Start the VM 'app-vm-19' in 'app-rg-19'.", "output": "Start-AzVM -Name 'app-vm-19' -ResourceGroupName 'app-rg-19'"}
{"instruction": "Stop and deallocate the VM 'app-vm-19' in 'app-rg-19'.", "output": "Stop-AzVM -Name 'app-vm-19' -ResourceGroupName 'app-rg-19' -Force"}
{"instruction": "Restart the VM 'app-vm-19' in 'app-rg-19'.", "output": "Restart-AzVM -Name 'app-vm-19' -ResourceGroupName 'app-rg-19'"}
{"instruction": "Resize the VM 'app-vm-19' in 'app-rg-19' to 'Standard_D2s_v5'.", "output": "$vm = Get-AzVM -Name 'app-vm-19' -ResourceGroupName 'app-rg-19'\n$vm.HardwareProfile.VmSize = 'Standard_D2s_v5'\nUpdate-AzVM -ResourceGroupName 'app-rg-19' -VM $vm"}
{"instruction": "Attach a 128GB data disk to VM 'app-vm-19' in 'app-rg-19'.", "output": "$vm = Get-AzVM -Name 'app-vm-19' -ResourceGroupName 'app-rg-19'\nAdd-AzVMDataDisk -VM $vm -Name 'app-vm-19-data1' -Lun 1 -CreateOption Empty -DiskSizeInGB 128\nUpdate-AzVM -ResourceGroupName 'app-rg-19' -VM $vm"}
{"instruction": "Enable boot diagnostics on VM 'app-vm-19' in 'app-rg-19' using 'stdiag019'.", "output": "$vm = Get-AzVM -Name 'app-vm-19' -ResourceGroupName 'app-rg-19'\nSet-AzVMBootDiagnostics -VM $vm -Enable -ResourceGroupName 'app-rg-19' -StorageAccountName 'stdiag019'\nUpdate-AzVM -ResourceGroupName 'app-rg-19' -VM $vm"}
{"instruction": "Create a Linux VM 'app-vm-20' in 'app-rg-20' (eastus) with size 'Standard_D4s_v5'.", "output": "New-AzVM -ResourceGroupName 'app-rg-20' -Location 'eastus' -Name 'app-vm-20' -Size 'Standard_D4s_v5' -Image 'Canonical:0001-com-ubuntu-server-jammy:22_04-lts:latest' -GenerateSshKey"}
{"instruction": "Start the VM 'app-vm-20' in 'app-rg-20'.", "output": "Start-AzVM -Name 'app-vm-20' -ResourceGroupName 'app-rg-20'"}
{"instruction": "Stop and deallocate the VM 'app-vm-20' in 'app-rg-20'.", "output": "Stop-AzVM -Name 'app-vm-20' -ResourceGroupName 'app-rg-20' -Force"}
{"instruction": "Restart the VM 'app-vm-20' in 'app-rg-20'.", "output": "Restart-AzVM -Name 'app-vm-20' -ResourceGroupName 'app-rg-20'"}
{"instruction": "Resize the VM 'app-vm-20' in 'app-rg-20' to 'Standard_D4s_v5'.", "output": "$vm = Get-AzVM -Name 'app-vm-20' -ResourceGroupName 'app-rg-20'\n$vm.HardwareProfile.VmSize = 'Standard_D4s_v5'\nUpdate-AzVM -ResourceGroupName 'app-rg-20' -VM $vm"}
{"instruction": "Attach a 128GB data disk to VM 'app-vm-20' in 'app-rg-20'.", "output": "$vm = Get-AzVM -Name 'app-vm-20' -ResourceGroupName 'app-rg-20'\nAdd-AzVMDataDisk -VM $vm -Name 'app-vm-20-data1' -Lun 1 -CreateOption Empty -DiskSizeInGB 128\nUpdate-AzVM -ResourceGroupName 'app-rg-20' -VM $vm"}
{"instruction": "Enable boot diagnostics on VM 'app-vm-20' in 'app-rg-20' using 'stdiag020'.", "output": "$vm = Get-AzVM -Name 'app-vm-20' -ResourceGroupName 'app-rg-20'\nSet-AzVMBootDiagnostics -VM $vm -Enable -ResourceGroupName 'app-rg-20' -StorageAccountName 'stdiag020'\nUpdate-AzVM -ResourceGroupName 'app-rg-20' -VM $vm"}
{"instruction": "Create a StorageV2 account 'stappdata001' in 'eastus2' with Standard_LRS in 'storage-rg-1'.", "output": "New-AzStorageAccount -ResourceGroupName 'storage-rg-1' -Name 'stappdata001' -Location 'eastus2' -SkuName 'Standard_LRS' -Kind 'StorageV2'"}
{"instruction": "List keys for storage account 'stappdata001' in 'storage-rg-1'.", "output": "Get-AzStorageAccountKey -ResourceGroupName 'storage-rg-1' -Name 'stappdata001'"}
{"instruction": "Create a private blob container 'logs' on 'stappdata001' in 'storage-rg-1'.", "output": "$ctx = (Get-AzStorageAccount -ResourceGroupName 'storage-rg-1' -Name 'stappdata001').Context\nNew-AzStorageContainer -Name 'logs' -Context $ctx -Permission Off"}
{"instruction": "Upload './web.log' to 'logs' on 'stappdata001' in 'storage-rg-1'.", "output": "$ctx = (Get-AzStorageAccount -ResourceGroupName 'storage-rg-1' -Name 'stappdata001').Context\nSet-AzStorageBlobContent -File './web.log' -Container 'logs' -Blob 'web.log' -Context $ctx"}
{"instruction": "Enable blob soft delete (7 days) on 'stappdata001'.", "output": "Enable-AzStorageBlobDeleteRetentionPolicy -ResourceGroupName 'storage-rg-1' -AccountName 'stappdata001' -RetentionDays 7"}
{"instruction": "Create a StorageV2 account 'stappdata002' in 'westus2' with Standard_LRS in 'storage-rg-2'.", "output": "New-AzStorageAccount -ResourceGroupName 'storage-rg-2' -Name 'stappdata002' -Location 'westus2' -SkuName 'Standard_LRS' -Kind 'StorageV2'"}
{"instruction": "List keys for storage account 'stappdata002' in 'storage-rg-2'.", "output": "Get-AzStorageAccountKey -ResourceGroupName 'storage-rg-2' -Name 'stappdata002'"}
{"instruction": "Create a private blob container 'logs' on 'stappdata002' in 'storage-rg-2'.", "output": "$ctx = (Get-AzStorageAccount -ResourceGroupName 'storage-rg-2' -Name 'stappdata002').Context\nNew-AzStorageContainer -Name 'logs' -Context $ctx -Permission Off"}
{"instruction": "Upload './web.log' to 'logs' on 'stappdata002' in 'storage-rg-2'.", "output": "$ctx = (Get-AzStorageAccount -ResourceGroupName 'storage-rg-2' -Name 'stappdata002').Context\nSet-AzStorageBlobContent -File './web.log' -Container 'logs' -Blob 'web.log' -Context $ctx"}
{"instruction": "Enable blob soft delete (7 days) on 'stappdata002'.", "output": "Enable-AzStorageBlobDeleteRetentionPolicy -ResourceGroupName 'storage-rg-2' -AccountName 'stappdata002' -RetentionDays 7"}
{"instruction": "Create a StorageV2 account 'stappdata003' in 'westeurope' with Standard_LRS in 'storage-rg-3'.", "output": "New-AzStorageAccount -ResourceGroupName 'storage-rg-3' -Name 'stappdata003' -Location 'westeurope' -SkuName 'Standard_LRS' -Kind 'StorageV2'"}
{"instruction": "List keys for storage account 'stappdata003' in 'storage-rg-3'.", "output": "Get-AzStorageAccountKey -ResourceGroupName 'storage-rg-3' -Name 'stappdata003'"}
{"instruction": "Create a private blob container 'logs' on 'stappdata003' in 'storage-rg-3'.", "output": "$ctx = (Get-AzStorageAccount -ResourceGroupName 'storage-rg-3' -Name 'stappdata003').Context\nNew-AzStorageContainer -Name 'logs' -Context $ctx -Permission Off"}
{"instruction": "Upload './web.log' to 'logs' on 'stappdata003' in 'storage-rg-3'.", "output": "$ctx = (Get-AzStorageAccount -ResourceGroupName 'storage-rg-3' -Name 'stappdata003').Context\nSet-AzStorageBlobContent -File './web.log' -Container 'logs' -Blob 'web.log' -Context $ctx"}
{"instruction": "Enable blob soft delete (7 days) on 'stappdata003'.", "output": "Enable-AzStorageBlobDeleteRetentionPolicy -ResourceGroupName 'storage-rg-3' -AccountName 'stappdata003' -RetentionDays 7"}
{"instruction": "Create a StorageV2 account 'stappdata004' in 'southeastasia' with Standard_LRS in 'storage-rg-4'.", "output": "New-AzStorageAccount -ResourceGroupName 'storage-rg-4' -Name 'stappdata004' -Location 'southeastasia' -SkuName 'Standard_LRS' -Kind 'StorageV2'"}
{"instruction": "List keys for storage account 'stappdata004' in 'storage-rg-4'.", "output": "Get-AzStorageAccountKey -ResourceGroupName 'storage-rg-4' -Name 'stappdata004'"}
{"instruction": "Create a private blob container 'logs' on 'stappdata004' in 'storage-rg-4'.", "output": "$ctx = (Get-AzStorageAccount -ResourceGroupName 'storage-rg-4' -Name 'stappdata004').Context\nNew-AzStorageContainer -Name 'logs' -Context $ctx -Permission Off"}
{"instruction": "Upload './web.log' to 'logs' on 'stappdata004' in 'storage-rg-4'.", "output": "$ctx = (Get-AzStorageAccount -ResourceGroupName 'storage-rg-4' -Name 'stappdata004').Context\nSet-AzStorageBlobContent -File './web.log' -Container 'logs' -Blob 'web.log' -Context $ctx"}
{"instruction": "Enable blob soft delete (7 days) on 'stappdata004'.", "output": "Enable-AzStorageBlobDeleteRetentionPolicy -ResourceGroupName 'storage-rg-4' -AccountName 'stappdata004' -RetentionDays 7"}
{"instruction": "Create a StorageV2 account 'stappdata005' in 'uksouth' with Standard_LRS in 'storage-rg-5'.", "output": "New-AzStorageAccount -ResourceGroupName 'storage-rg-5' -Name 'stappdata005' -Location 'uksouth' -SkuName 'Standard_LRS' -Kind 'StorageV2'"}
{"instruction": "List keys for storage account 'stappdata005' in 'storage-rg-5'.", "output": "Get-AzStorageAccountKey -ResourceGroupName 'storage-rg-5' -Name 'stappdata005'"}
{"instruction": "Create a private blob container 'logs' on 'stappdata005' in 'storage-rg-5'.", "output": "$ctx = (Get-AzStorageAccount -ResourceGroupName 'storage-rg-5' -Name 'stappdata005').Context\nNew-AzStorageContainer -Name 'logs' -Context $ctx -Permission Off"}
{"instruction": "Upload './web.log' to 'logs' on 'stappdata005' in 'storage-rg-5'.", "output": "$ctx = (Get-AzStorageAccount -ResourceGroupName 'storage-rg-5' -Name 'stappdata005').Context\nSet-AzStorageBlobContent -File './web.log' -Container 'logs' -Blob 'web.log' -Context $ctx"}
{"instruction": "Enable blob soft delete (7 days) on 'stappdata005'.", "output": "Enable-AzStorageBlobDeleteRetentionPolicy -ResourceGroupName 'storage-rg-5' -AccountName 'stappdata005' -RetentionDays 7"}
{"instruction": "Create a StorageV2 account 'stappdata006' in 'northeurope' with Standard_LRS in 'storage-rg-6'.", "output": "New-AzStorageAccount -ResourceGroupName 'storage-rg-6' -Name 'stappdata006' -Location 'northeurope' -SkuName 'Standard_LRS' -Kind 'StorageV2'"}
{"instruction": "List keys for storage account 'stappdata006' in 'storage-rg-6'.", "output": "Get-AzStorageAccountKey -ResourceGroupName 'storage-rg-6' -Name 'stappdata006'"}
{"instruction": "Create a private blob container 'logs' on 'stappdata006' in 'storage-rg-6'.", "output": "$ctx = (Get-AzStorageAccount -ResourceGroupName 'storage-rg-6' -Name 'stappdata006').Context\nNew-AzStorageContainer -Name 'logs' -Context $ctx -Permission Off"}
{"instruction": "Upload './web.log' to 'logs' on 'stappdata006' in 'storage-rg-6'.", "output": "$ctx = (Get-AzStorageAccount -ResourceGroupName 'storage-rg-6' -Name 'stappdata006').Context\nSet-AzStorageBlobContent -File './web.log' -Container 'logs' -Blob 'web.log' -Context $ctx"}
{"instruction": "Enable blob soft delete (7 days) on 'stappdata006'.", "output": "Enable-AzStorageBlobDeleteRetentionPolicy -ResourceGroupName 'storage-rg-6' -AccountName 'stappdata006' -RetentionDays 7"}
{"instruction": "Create VNet 'vnet-hub-1' with subnet 'snet-apps-1' in 'net-rg-1' at 'eastus'.", "output": "$s = New-AzVirtualNetworkSubnetConfig -Name 'snet-apps-1' -AddressPrefix '10.1.1.0/24'\nNew-AzVirtualNetwork -Name 'vnet-hub-1' -ResourceGroupName 'net-rg-1' -Location 'eastus' -AddressPrefix '10.1.0.0/16' -Subnet $s"}
{"instruction": "Create NSG 'nsg-web-1' with inbound TCP 80 allow in 'net-rg-1'.", "output": "$r = New-AzNetworkSecurityRuleConfig -Name 'Allow-HTTP' -Access Allow -Protocol Tcp -Direction Inbound -Priority 100 -SourceAddressPrefix * -SourcePortRange * -DestinationAddressPrefix * -DestinationPortRange 80\nNew-AzNetworkSecurityGroup -Name 'nsg-web-1' -ResourceGroupName 'net-rg-1' -Location 'eastus' -SecurityRules $r"}
{"instruction": "Create a static public IP 'pip-web-01' in 'net-rg-1' at 'eastus'.", "output": "New-AzPublicIpAddress -Name 'pip-web-01' -ResourceGroupName 'net-rg-1' -Location 'eastus' -AllocationMethod Static -Sku Standard"}
{"instruction": "Create NIC 'nic-web-01' in 'net-rg-1' attached to 'vnet-hub-1/snet-apps-1'.", "output": "$v = Get-AzVirtualNetwork -Name 'vnet-hub-1' -ResourceGroupName 'net-rg-1'\n$sn = Get-AzVirtualNetworkSubnetConfig -Name 'snet-apps-1' -VirtualNetwork $v\nNew-AzNetworkInterface -Name 'nic-web-01' -ResourceGroupName 'net-rg-1' -Location 'eastus' -SubnetId $sn.Id"}
{"instruction": "Peer VNets 'vnet-hub-1' and 'vnet-spoke-1'.", "output": "Add-AzVirtualNetworkPeering -Name 'vnet-hub-1-to-spoke' -VirtualNetwork (Get-AzVirtualNetwork -Name 'vnet-hub-1' -ResourceGroupName 'net-rg-1') -RemoteVirtualNetworkId (Get-AzVirtualNetwork -Name 'vnet-spoke-1' -ResourceGroupName 'net-rg-1').Id -AllowForwardedTraffic -AllowGatewayTransit"}
{"instruction": "Create VNet 'vnet-hub-2' with subnet 'snet-apps-2' in 'net-rg-2' at 'westeurope'.", "output": "$s = New-AzVirtualNetworkSubnetConfig -Name 'snet-apps-2' -AddressPrefix '10.2.1.0/24'\nNew-AzVirtualNetwork -Name 'vnet-hub-2' -ResourceGroupName 'net-rg-2' -Location 'westeurope' -AddressPrefix '10.2.0.0/16' -Subnet $s"}
{"instruction": "Create NSG 'nsg-web-2' with inbound TCP 80 allow in 'net-rg-2'.", "output": "$r = New-AzNetworkSecurityRuleConfig -Name 'Allow-HTTP' -Access Allow -Protocol Tcp -Direction Inbound -Priority 100 -SourceAddressPrefix * -SourcePortRange * -DestinationAddressPrefix * -DestinationPortRange 80\nNew-AzNetworkSecurityGroup -Name 'nsg-web-2' -ResourceGroupName 'net-rg-2' -Location 'westeurope' -SecurityRules $r"}
{"instruction": "Create a static public IP 'pip-web-02' in 'net-rg-2' at 'westeurope'.", "output": "New-AzPublicIpAddress -Name 'pip-web-02' -ResourceGroupName 'net-rg-2' -Location 'westeurope' -AllocationMethod Static -Sku Standard"}
{"instruction": "Create NIC 'nic-web-02' in 'net-rg-2' attached to 'vnet-hub-2/snet-apps-2'.", "output": "$v = Get-AzVirtualNetwork -Name 'vnet-hub-2' -ResourceGroupName 'net-rg-2'\n$sn = Get-AzVirtualNetworkSubnetConfig -Name 'snet-apps-2' -VirtualNetwork $v\nNew-AzNetworkInterface -Name 'nic-web-02' -ResourceGroupName 'net-rg-2' -Location 'westeurope' -SubnetId $sn.Id"}
{"instruction": "Peer VNets 'vnet-hub-2' and 'vnet-spoke-2'.", "output": "Add-AzVirtualNetworkPeering -Name 'vnet-hub-2-to-spoke' -VirtualNetwork (Get-AzVirtualNetwork -Name 'vnet-hub-2' -ResourceGroupName 'net-rg-2') -RemoteVirtualNetworkId (Get-AzVirtualNetwork -Name 'vnet-spoke-2' -ResourceGroupName 'net-rg-2').Id -AllowForwardedTraffic -AllowGatewayTransit"}
{"instruction": "Create VNet 'vnet-hub-3' with subnet 'snet-apps-3' in 'net-rg-3' at 'centralus'.", "output": "$s = New-AzVirtualNetworkSubnetConfig -Name 'snet-apps-3' -AddressPrefix '10.3.1.0/24'\nNew-AzVirtualNetwork -Name 'vnet-hub-3' -ResourceGroupName 'net-rg-3' -Location 'centralus' -AddressPrefix '10.3.0.0/16' -Subnet $s"}
{"instruction": "Create NSG 'nsg-web-3' with inbound TCP 80 allow in 'net-rg-3'.", "output": "$r = New-AzNetworkSecurityRuleConfig -Name 'Allow-HTTP' -Access Allow -Protocol Tcp -Direction Inbound -Priority 100 -SourceAddressPrefix * -SourcePortRange * -DestinationAddressPrefix * -DestinationPortRange 80\nNew-AzNetworkSecurityGroup -Name 'nsg-web-3' -ResourceGroupName 'net-rg-3' -Location 'centralus' -SecurityRules $r"}
{"instruction": "Create a static public IP 'pip-web-03' in 'net-rg-3' at 'centralus'.", "output": "New-AzPublicIpAddress -Name 'pip-web-03' -ResourceGroupName 'net-rg-3' -Location 'centralus' -AllocationMethod Static -Sku Standard"}
{"instruction": "Create NIC 'nic-web-03' in 'net-rg-3' attached to 'vnet-hub-3/snet-apps-3'.", "output": "$v = Get-AzVirtualNetwork -Name 'vnet-hub-3' -ResourceGroupName 'net-rg-3'\n$sn = Get-AzVirtualNetworkSubnetConfig -Name 'snet-apps-3' -VirtualNetwork $v\nNew-AzNetworkInterface -Name 'nic-web-03' -ResourceGroupName 'net-rg-3' -Location 'centralus' -SubnetId $sn.Id"}
{"instruction": "Peer VNets 'vnet-hub-3' and 'vnet-spoke-3'.", "output": "Add-AzVirtualNetworkPeering -Name 'vnet-hub-3-to-spoke' -VirtualNetwork (Get-AzVirtualNetwork -Name 'vnet-hub-3' -ResourceGroupName 'net-rg-3') -RemoteVirtualNetworkId (Get-AzVirtualNetwork -Name 'vnet-spoke-3' -ResourceGroupName 'net-rg-3').Id -AllowForwardedTraffic -AllowGatewayTransit"}
{"instruction": "Create VNet 'vnet-hub-4' with subnet 'snet-apps-4' in 'net-rg-4' at 'westus2'.", "output": "$s = New-AzVirtualNetworkSubnetConfig -Name 'snet-apps-4' -AddressPrefix '10.4.1.0/24'\nNew-AzVirtualNetwork -Name 'vnet-hub-4' -ResourceGroupName 'net-rg-4' -Location 'westus2' -AddressPrefix '10.4.0.0/16' -Subnet $s"}
{"instruction": "Create NSG 'nsg-web-4' with inbound TCP 80 allow in 'net-rg-4'.", "output": "$r = New-AzNetworkSecurityRuleConfig -Name 'Allow-HTTP' -Access Allow -Protocol Tcp -Direction Inbound -Priority 100 -SourceAddressPrefix * -SourcePortRange * -DestinationAddressPrefix * -DestinationPortRange 80\nNew-AzNetworkSecurityGroup -Name 'nsg-web-4' -ResourceGroupName 'net-rg-4' -Location 'westus2' -SecurityRules $r"}
{"instruction": "Create a static public IP 'pip-web-04' in 'net-rg-4' at 'westus2'.", "output": "New-AzPublicIpAddress -Name 'pip-web-04' -ResourceGroupName 'net-rg-4' -Location 'westus2' -AllocationMethod Static -Sku Standard"}
{"instruction": "Create NIC 'nic-web-04' in 'net-rg-4' attached to 'vnet-hub-4/snet-apps-4'.", "output": "$v = Get-AzVirtualNetwork -Name 'vnet-hub-4' -ResourceGroupName 'net-rg-4'\n$sn = Get-AzVirtualNetworkSubnetConfig -Name 'snet-apps-4' -VirtualNetwork $v\nNew-AzNetworkInterface -Name 'nic-web-04' -ResourceGroupName 'net-rg-4' -Location 'westus2' -SubnetId $sn.Id"}
{"instruction": "Peer VNets 'vnet-hub-4' and 'vnet-spoke-4'.", "output": "Add-AzVirtualNetworkPeering -Name 'vnet-hub-4-to-spoke' -VirtualNetwork (Get-AzVirtualNetwork -Name 'vnet-hub-4' -ResourceGroupName 'net-rg-4') -RemoteVirtualNetworkId (Get-AzVirtualNetwork -Name 'vnet-spoke-4' -ResourceGroupName 'net-rg-4').Id -AllowForwardedTraffic -AllowGatewayTransit"}
{"instruction": "Create a basic public Load Balancer 'lb-web-1' in 'lb-rg-1' at eastus.", "output": "New-AzLoadBalancer -ResourceGroupName 'lb-rg-1' -Name 'lb-web-1' -Location 'eastus' -Sku Basic -FrontendIpConfiguration @(@{ Name = 'fe'; PublicIpAddress = New-AzPublicIpAddress -Name 'pip-lb-1' -ResourceGroupName 'lb-rg-1' -Location 'eastus' -AllocationMethod Static }) -BackendAddressPool @(@{ Name = 'bep' }) -Probe @(@{ Name = 'hp'; Protocol = Tcp; Port = 80 }) -LoadBalancingRule @(@{ Name = 'lbr'; Protocol = Tcp; FrontendPort = 80; BackendPort = 80; IdleTimeoutInMinutes = 4; EnableFloatingIP = $false; BackendAddressPool = 'bep'; Probe = 'hp'; FrontendIpConfiguration = 'fe' })"}
{"instruction": "Create a basic public Load Balancer 'lb-web-2' in 'lb-rg-2' at eastus.", "output": "New-AzLoadBalancer -ResourceGroupName 'lb-rg-2' -Name 'lb-web-2' -Location 'eastus' -Sku Basic -FrontendIpConfiguration @(@{ Name = 'fe'; PublicIpAddress = New-AzPublicIpAddress -Name 'pip-lb-2' -ResourceGroupName 'lb-rg-2' -Location 'eastus' -AllocationMethod Static }) -BackendAddressPool @(@{ Name = 'bep' }) -Probe @(@{ Name = 'hp'; Protocol = Tcp; Port = 80 }) -LoadBalancingRule @(@{ Name = 'lbr'; Protocol = Tcp; FrontendPort = 80; BackendPort = 80; IdleTimeoutInMinutes = 4; EnableFloatingIP = $false; BackendAddressPool = 'bep'; Probe = 'hp'; FrontendIpConfiguration = 'fe' })"}
{"instruction": "Create a basic public Load Balancer 'lb-web-3' in 'lb-rg-3' at eastus.", "output": "New-AzLoadBalancer -ResourceGroupName 'lb-rg-3' -Name 'lb-web-3' -Location 'eastus' -Sku Basic -FrontendIpConfiguration @(@{ Name = 'fe'; PublicIpAddress = New-AzPublicIpAddress -Name 'pip-lb-3' -ResourceGroupName 'lb-rg-3' -Location 'eastus' -AllocationMethod Static }) -BackendAddressPool @(@{ Name = 'bep' }) -Probe @(@{ Name = 'hp'; Protocol = Tcp; Port = 80 }) -LoadBalancingRule @(@{ Name = 'lbr'; Protocol = Tcp; FrontendPort = 80; BackendPort = 80; IdleTimeoutInMinutes = 4; EnableFloatingIP = $false; BackendAddressPool = 'bep'; Probe = 'hp'; FrontendIpConfiguration = 'fe' })"}
{"instruction": "Create a basic public Load Balancer 'lb-web-4' in 'lb-rg-4' at eastus.", "output": "New-AzLoadBalancer -ResourceGroupName 'lb-rg-4' -Name 'lb-web-4' -Location 'eastus' -Sku Basic -FrontendIpConfiguration @(@{ Name = 'fe'; PublicIpAddress = New-AzPublicIpAddress -Name 'pip-lb-4' -ResourceGroupName 'lb-rg-4' -Location 'eastus' -AllocationMethod Static }) -BackendAddressPool @(@{ Name = 'bep' }) -Probe @(@{ Name = 'hp'; Protocol = Tcp; Port = 80 }) -LoadBalancingRule @(@{ Name = 'lbr'; Protocol = Tcp; FrontendPort = 80; BackendPort = 80; IdleTimeoutInMinutes = 4; EnableFloatingIP = $false; BackendAddressPool = 'bep'; Probe = 'hp'; FrontendIpConfiguration = 'fe' })"}
{"instruction": "Create a basic public Load Balancer 'lb-web-5' in 'lb-rg-5' at eastus.", "output": "New-AzLoadBalancer -ResourceGroupName 'lb-rg-5' -Name 'lb-web-5' -Location 'eastus' -Sku Basic -FrontendIpConfiguration @(@{ Name = 'fe'; PublicIpAddress = New-AzPublicIpAddress -Name 'pip-lb-5' -ResourceGroupName 'lb-rg-5' -Location 'eastus' -AllocationMethod Static }) -BackendAddressPool @(@{ Name = 'bep' }) -Probe @(@{ Name = 'hp'; Protocol = Tcp; Port = 80 }) -LoadBalancingRule @(@{ Name = 'lbr'; Protocol = Tcp; FrontendPort = 80; BackendPort = 80; IdleTimeoutInMinutes = 4; EnableFloatingIP = $false; BackendAddressPool = 'bep'; Probe = 'hp'; FrontendIpConfiguration = 'fe' })"}
{"instruction": "Create a Key Vault 'kv-001-prod' in 'sec-rg-1' at 'eastus'.", "output": "New-AzKeyVault -Name 'kv-001-prod' -ResourceGroupName 'sec-rg-1' -Location 'eastus' -Sku Standard"}
{"instruction": "Set a secret 'DbPassword' in 'kv-001-prod'.", "output": "Set-AzKeyVaultSecret -VaultName 'kv-001-prod' -Name 'DbPassword' -SecretValue (ConvertTo-SecureString 'P@ssw0rd!123' -AsPlainText -Force)"}
{"instruction": "Grant secret get permissions on 'kv-001-prod' to 'alice@contoso.com'.", "output": "Set-AzKeyVaultAccessPolicy -VaultName 'kv-001-prod' -UserPrincipalName 'alice@contoso.com' -PermissionsToSecrets get,list"}
{"instruction": "Create a Key Vault 'kv-002-prod' in 'sec-rg-2' at 'westus2'.", "output": "New-AzKeyVault -Name 'kv-002-prod' -ResourceGroupName 'sec-rg-2' -Location 'westus2' -Sku Standard"}
{"instruction": "Set a secret 'DbPassword' in 'kv-002-prod'.", "output": "Set-AzKeyVaultSecret -VaultName 'kv-002-prod' -Name 'DbPassword' -SecretValue (ConvertTo-SecureString 'P@ssw0rd!123' -AsPlainText -Force)"}
{"instruction": "Grant secret get permissions on 'kv-002-prod' to 'alice@contoso.com'.", "output": "Set-AzKeyVaultAccessPolicy -VaultName 'kv-002-prod' -UserPrincipalName 'alice@contoso.com' -PermissionsToSecrets get,list"}
{"instruction": "Create a Key Vault 'kv-003-prod' in 'sec-rg-3' at 'westeurope'.", "output": "New-AzKeyVault -Name 'kv-003-prod' -ResourceGroupName 'sec-rg-3' -Location 'westeurope' -Sku Standard"}
{"instruction": "Set a secret 'DbPassword' in 'kv-003-prod'.", "output": "Set-AzKeyVaultSecret -VaultName 'kv-003-prod' -Name 'DbPassword' -SecretValue (ConvertTo-SecureString 'P@ssw0rd!123' -AsPlainText -Force)"}
{"instruction": "Grant secret get permissions on 'kv-003-prod' to 'alice@contoso.com'.", "output": "Set-AzKeyVaultAccessPolicy -VaultName 'kv-003-prod' -UserPrincipalName 'alice@contoso.com' -PermissionsToSecrets get,list"}
{"instruction": "Create a Key Vault 'kv-004-prod' in 'sec-rg-4' at 'centralus'.", "output": "New-AzKeyVault -Name 'kv-004-prod' -ResourceGroupName 'sec-rg-4' -Location 'centralus' -Sku Standard"}
{"instruction": "Set a secret 'DbPassword' in 'kv-004-prod'.", "output": "Set-AzKeyVaultSecret -VaultName 'kv-004-prod' -Name 'DbPassword' -SecretValue (ConvertTo-SecureString 'P@ssw0rd!123' -AsPlainText -Force)"}
{"instruction": "Grant secret get permissions on 'kv-004-prod' to 'alice@contoso.com'.", "output": "Set-AzKeyVaultAccessPolicy -VaultName 'kv-004-prod' -UserPrincipalName 'alice@contoso.com' -PermissionsToSecrets get,list"}
{"instruction": "List unattached managed disks in 'disk-rg-1'.", "output": "Get-AzDisk -ResourceGroupName 'disk-rg-1' | Where-Object { -not $_.ManagedBy }"}
{"instruction": "Create a snapshot 'snap-os-01' from disk 'osdisk-01' in 'disk-rg-1' (eastus).", "output": "$d = Get-AzDisk -ResourceGroupName 'disk-rg-1' -DiskName 'osdisk-01'\n$c = New-AzSnapshotConfig -SourceUri $d.Id -Location 'eastus' -CreateOption Copy\nNew-AzSnapshot -ResourceGroupName 'disk-rg-1' -SnapshotName 'snap-os-01' -Snapshot $c"}
{"instruction": "List unattached managed disks in 'disk-rg-2'.", "output": "Get-AzDisk -ResourceGroupName 'disk-rg-2' | Where-Object { -not $_.ManagedBy }"}
{"instruction": "Create a snapshot 'snap-os-02' from disk 'osdisk-02' in 'disk-rg-2' (eastus).", "output": "$d = Get-AzDisk -ResourceGroupName 'disk-rg-2' -DiskName 'osdisk-02'\n$c = New-AzSnapshotConfig -SourceUri $d.Id -Location 'eastus' -CreateOption Copy\nNew-AzSnapshot -ResourceGroupName 'disk-rg-2' -SnapshotName 'snap-os-02' -Snapshot $c"}
{"instruction": "List unattached managed disks in 'disk-rg-3'.", "output": "Get-AzDisk -ResourceGroupName 'disk-rg-3' | Where-Object { -not $_.ManagedBy }"}
{"instruction": "Create a snapshot 'snap-os-03' from disk 'osdisk-03' in 'disk-rg-3' (eastus).", "output": "$d = Get-AzDisk -ResourceGroupName 'disk-rg-3' -DiskName 'osdisk-03'\n$c = New-AzSnapshotConfig -SourceUri $d.Id -Location 'eastus' -CreateOption Copy\nNew-AzSnapshot -ResourceGroupName 'disk-rg-3' -SnapshotName 'snap-os-03' -Snapshot $c"}
{"instruction": "List unattached managed disks in 'disk-rg-4'.", "output": "Get-AzDisk -ResourceGroupName 'disk-rg-4' | Where-Object { -not $_.ManagedBy }"}
{"instruction": "Create a snapshot 'snap-os-04' from disk 'osdisk-04' in 'disk-rg-4' (eastus).", "output": "$d = Get-AzDisk -ResourceGroupName 'disk-rg-4' -DiskName 'osdisk-04'\n$c = New-AzSnapshotConfig -SourceUri $d.Id -Location 'eastus' -CreateOption Copy\nNew-AzSnapshot -ResourceGroupName 'disk-rg-4' -SnapshotName 'snap-os-04' -Snapshot $c"}
{"instruction": "List unattached managed disks in 'disk-rg-5'.", "output": "Get-AzDisk -ResourceGroupName 'disk-rg-5' | Where-Object { -not $_.ManagedBy }"}
{"instruction": "Create a snapshot 'snap-os-05' from disk 'osdisk-05' in 'disk-rg-5' (eastus).", "output": "$d = Get-AzDisk -ResourceGroupName 'disk-rg-5' -DiskName 'osdisk-05'\n$c = New-AzSnapshotConfig -SourceUri $d.Id -Location 'eastus' -CreateOption Copy\nNew-AzSnapshot -ResourceGroupName 'disk-rg-5' -SnapshotName 'snap-os-05' -Snapshot $c"}
{"instruction": "List unattached managed disks in 'disk-rg-6'.", "output": "Get-AzDisk -ResourceGroupName 'disk-rg-6' | Where-Object { -not $_.ManagedBy }"}
{"instruction": "Create a snapshot 'snap-os-06' from disk 'osdisk-06' in 'disk-rg-6' (eastus).", "output": "$d = Get-AzDisk -ResourceGroupName 'disk-rg-6' -DiskName 'osdisk-06'\n$c = New-AzSnapshotConfig -SourceUri $d.Id -Location 'eastus' -CreateOption Copy\nNew-AzSnapshot -ResourceGroupName 'disk-rg-6' -SnapshotName 'snap-os-06' -Snapshot $c"}
{"instruction": "List unattached managed disks in 'disk-rg-7'.", "output": "Get-AzDisk -ResourceGroupName 'disk-rg-7' | Where-Object { -not $_.ManagedBy }"}
{"instruction": "Create a snapshot 'snap-os-07' from disk 'osdisk-07' in 'disk-rg-7' (eastus).", "output": "$d = Get-AzDisk -ResourceGroupName 'disk-rg-7' -DiskName 'osdisk-07'\n$c = New-AzSnapshotConfig -SourceUri $d.Id -Location 'eastus' -CreateOption Copy\nNew-AzSnapshot -ResourceGroupName 'disk-rg-7' -SnapshotName 'snap-os-07' -Snapshot $c"}
{"instruction": "Assign the 'Reader' role on 'auth-rg-1' to user 'alice@contoso.com'.", "output": "New-AzRoleAssignment -SignInName 'alice@contoso.com' -RoleDefinitionName 'Reader' -ResourceGroupName 'auth-rg-1'"}
{"instruction": "Remove the 'Reader' role on 'auth-rg-1' from user 'alice@contoso.com'.", "output": "Remove-AzRoleAssignment -SignInName 'alice@contoso.com' -RoleDefinitionName 'Reader' -ResourceGroupName 'auth-rg-1'"}
{"instruction": "Assign the 'Reader' role on 'auth-rg-2' to user 'alice@contoso.com'.", "output": "New-AzRoleAssignment -SignInName 'alice@contoso.com' -RoleDefinitionName 'Reader' -ResourceGroupName 'auth-rg-2'"}
{"instruction": "Remove the 'Reader' role on 'auth-rg-2' from user 'alice@contoso.com'.", "output": "Remove-AzRoleAssignment -SignInName 'alice@contoso.com' -RoleDefinitionName 'Reader' -ResourceGroupName 'auth-rg-2'"}
{"instruction": "Assign the 'Contributor' role on 'auth-rg-1' to user 'alice@contoso.com'.", "output": "New-AzRoleAssignment -SignInName 'alice@contoso.com' -RoleDefinitionName 'Contributor' -ResourceGroupName 'auth-rg-1'"}
{"instruction": "Remove the 'Contributor' role on 'auth-rg-1' from user 'alice@contoso.com'.", "output": "Remove-AzRoleAssignment -SignInName 'alice@contoso.com' -RoleDefinitionName 'Contributor' -ResourceGroupName 'auth-rg-1'"}
{"instruction": "Assign the 'Contributor' role on 'auth-rg-2' to user 'alice@contoso.com'.", "output": "New-AzRoleAssignment -SignInName 'alice@contoso.com' -RoleDefinitionName 'Contributor' -ResourceGroupName 'auth-rg-2'"}
{"instruction": "Remove the 'Contributor' role on 'auth-rg-2' from user 'alice@contoso.com'.", "output": "Remove-AzRoleAssignment -SignInName 'alice@contoso.com' -RoleDefinitionName 'Contributor' -ResourceGroupName 'auth-rg-2'"}
{"instruction": "Assign the 'Storage Blob Data Reader' role on 'auth-rg-1' to user 'alice@contoso.com'.", "output": "New-AzRoleAssignment -SignInName 'alice@contoso.com' -RoleDefinitionName 'Storage Blob Data Reader' -ResourceGroupName 'auth-rg-1'"}
{"instruction": "Remove the 'Storage Blob Data Reader' role on 'auth-rg-1' from user 'alice@contoso.com'.", "output": "Remove-AzRoleAssignment -SignInName 'alice@contoso.com' -RoleDefinitionName 'Storage Blob Data Reader' -ResourceGroupName 'auth-rg-1'"}
{"instruction": "Assign the 'Storage Blob Data Reader' role on 'auth-rg-2' to user 'alice@contoso.com'.", "output": "New-AzRoleAssignment -SignInName 'alice@contoso.com' -RoleDefinitionName 'Storage Blob Data Reader' -ResourceGroupName 'auth-rg-2'"}
{"instruction": "Remove the 'Storage Blob Data Reader' role on 'auth-rg-2' from user 'alice@contoso.com'.", "output": "Remove-AzRoleAssignment -SignInName 'alice@contoso.com' -RoleDefinitionName 'Storage Blob Data Reader' -ResourceGroupName 'auth-rg-2'"}
{"instruction": "Create Azure AD user 'user1@contoso.com' requiring password change on first login.", "output": "New-AzureADUser -DisplayName 'User 1' -UserPrincipalName 'user1@contoso.com' -AccountEnabled $true -MailNickname 'user1' -PasswordProfile @{ ForceChangePasswordNextLogin = $true; Password = 'Pass@w0rd!' }"}
{"instruction": "Create Azure AD group 'SecGroup1'.", "output": "New-AzureADGroup -DisplayName 'SecGroup1' -MailEnabled $false -MailNickname 'secgroup1' -SecurityEnabled $true"}
{"instruction": "Add 'user1@contoso.com' to group 'SecGroup1'.", "output": "Add-AzureADGroupMember -ObjectId (Get-AzureADGroup -SearchString 'SecGroup1').ObjectId -RefObjectId (Get-AzureADUser -ObjectId 'user1@contoso.com').ObjectId"}
{"instruction": "Create Azure AD user 'user2@contoso.com' requiring password change on first login.", "output": "New-AzureADUser -DisplayName 'User 2' -UserPrincipalName 'user2@contoso.com' -AccountEnabled $true -MailNickname 'user2' -PasswordProfile @{ ForceChangePasswordNextLogin = $true; Password = 'Pass@w0rd!' }"}
{"instruction": "Create Azure AD group 'SecGroup2'.", "output": "New-AzureADGroup -DisplayName 'SecGroup2' -MailEnabled $false -MailNickname 'secgroup2' -SecurityEnabled $true"}
{"instruction": "Add 'user2@contoso.com' to group 'SecGroup2'.", "output": "Add-AzureADGroupMember -ObjectId (Get-AzureADGroup -SearchString 'SecGroup2').ObjectId -RefObjectId (Get-AzureADUser -ObjectId 'user2@contoso.com').ObjectId"}
{"instruction": "Create Azure AD user 'user3@contoso.com' requiring password change on first login.", "output": "New-AzureADUser -DisplayName 'User 3' -UserPrincipalName 'user3@contoso.com' -AccountEnabled $true -MailNickname 'user3' -PasswordProfile @{ ForceChangePasswordNextLogin = $true; Password = 'Pass@w0rd!' }"}
{"instruction": "Create Azure AD group 'SecGroup3'.", "output": "New-AzureADGroup -DisplayName 'SecGroup3' -MailEnabled $false -MailNickname 'secgroup3' -SecurityEnabled $true"}
{"instruction": "Add 'user3@contoso.com' to group 'SecGroup3'.", "output": "Add-AzureADGroupMember -ObjectId (Get-AzureADGroup -SearchString 'SecGroup3').ObjectId -RefObjectId (Get-AzureADUser -ObjectId 'user3@contoso.com').ObjectId"}
{"instruction": "Create Azure AD user 'user4@contoso.com' requiring password change on first login.", "output": "New-AzureADUser -DisplayName 'User 4' -UserPrincipalName 'user4@contoso.com' -AccountEnabled $true -MailNickname 'user4' -PasswordProfile @{ ForceChangePasswordNextLogin = $true; Password = 'Pass@w0rd!' }"}
{"instruction": "Create Azure AD group 'SecGroup4'.", "output": "New-AzureADGroup -DisplayName 'SecGroup4' -MailEnabled $false -MailNickname 'secgroup4' -SecurityEnabled $true"}
{"instruction": "Add 'user4@contoso.com' to group 'SecGroup4'.", "output": "Add-AzureADGroupMember -ObjectId (Get-AzureADGroup -SearchString 'SecGroup4').ObjectId -RefObjectId (Get-AzureADUser -ObjectId 'user4@contoso.com').ObjectId"}
{"instruction": "Create Azure AD user 'user5@contoso.com' requiring password change on first login.", "output": "New-AzureADUser -DisplayName 'User 5' -UserPrincipalName 'user5@contoso.com' -AccountEnabled $true -MailNickname 'user5' -PasswordProfile @{ ForceChangePasswordNextLogin = $true; Password = 'Pass@w0rd!' }"}
{"instruction": "Create Azure AD group 'SecGroup5'.", "output": "New-AzureADGroup -DisplayName 'SecGroup5' -MailEnabled $false -MailNickname 'secgroup5' -SecurityEnabled $true"}
{"instruction": "Add 'user5@contoso.com' to group 'SecGroup5'.", "output": "Add-AzureADGroupMember -ObjectId (Get-AzureADGroup -SearchString 'SecGroup5').ObjectId -RefObjectId (Get-AzureADUser -ObjectId 'user5@contoso.com').ObjectId"}
{"instruction": "Create Azure SQL server 'sqlsvr001' in 'sql-rg-1' (eastus).", "output": "New-AzSqlServer -ResourceGroupName 'sql-rg-1' -ServerName 'sqlsvr001' -Location 'eastus' -SqlAdministratorCredentials (Get-Credential)"}
{"instruction": "Create Azure SQL database 'sqldb001' on server 'sqlsvr001' in 'sql-rg-1'.", "output": "New-AzSqlDatabase -ResourceGroupName 'sql-rg-1' -ServerName 'sqlsvr001' -DatabaseName 'sqldb001' -Edition GeneralPurpose -ComputeModel Serverless -ComputeGeneration Gen5 -MinVcores 1 -MaxVcores 4"}
{"instruction": "Add firewall rule to allow Azure services on 'sqlsvr001'.", "output": "New-AzSqlServerFirewallRule -ResourceGroupName 'sql-rg-1' -ServerName 'sqlsvr001' -AllowAllAzureIPs"}
{"instruction": "Create Azure SQL server 'sqlsvr002' in 'sql-rg-2' (eastus).", "output": "New-AzSqlServer -ResourceGroupName 'sql-rg-2' -ServerName 'sqlsvr002' -Location 'eastus' -SqlAdministratorCredentials (Get-Credential)"}
{"instruction": "Create Azure SQL database 'sqldb002' on server 'sqlsvr002' in 'sql-rg-2'.", "output": "New-AzSqlDatabase -ResourceGroupName 'sql-rg-2' -ServerName 'sqlsvr002' -DatabaseName 'sqldb002' -Edition GeneralPurpose -ComputeModel Serverless -ComputeGeneration Gen5 -MinVcores 1 -MaxVcores 4"}
{"instruction": "Add firewall rule to allow Azure services on 'sqlsvr002'.", "output": "New-AzSqlServerFirewallRule -ResourceGroupName 'sql-rg-2' -ServerName 'sqlsvr002' -AllowAllAzureIPs"}
{"instruction": "Create Azure SQL server 'sqlsvr003' in 'sql-rg-3' (eastus).", "output": "New-AzSqlServer -ResourceGroupName 'sql-rg-3' -ServerName 'sqlsvr003' -Location 'eastus' -SqlAdministratorCredentials (Get-Credential)"}
{"instruction": "Create Azure SQL database 'sqldb003' on server 'sqlsvr003' in 'sql-rg-3'.", "output": "New-AzSqlDatabase -ResourceGroupName 'sql-rg-3' -ServerName 'sqlsvr003' -DatabaseName 'sqldb003' -Edition GeneralPurpose -ComputeModel Serverless -ComputeGeneration Gen5 -MinVcores 1 -MaxVcores 4"}
{"instruction": "Add firewall rule to allow Azure services on 'sqlsvr003'.", "output": "New-AzSqlServerFirewallRule -ResourceGroupName 'sql-rg-3' -ServerName 'sqlsvr003' -AllowAllAzureIPs"}
{"instruction": "Create Cosmos DB account 'cosmos001acct' (SQL API) in 'cosmos-rg-1' at eastus.", "output": "New-AzCosmosDBAccount -ResourceGroupName 'cosmos-rg-1' -Name 'cosmos001acct' -Location 'eastus' -DefaultConsistencyLevel Session -ApiKind 'Sql' -EnableAutomaticFailover"}
{"instruction": "Create Cosmos DB database 'appdb' in account 'cosmos001acct'.", "output": "New-AzCosmosDBSqlDatabase -ResourceGroupName 'cosmos-rg-1' -AccountName 'cosmos001acct' -Name 'appdb'"}
{"instruction": "Create Cosmos DB container 'items' (pk='/id') in 'cosmos001acct/appdb'.", "output": "New-AzCosmosDBSqlContainer -ResourceGroupName 'cosmos-rg-1' -AccountName 'cosmos001acct' -DatabaseName 'appdb' -Name 'items' -PartitionKeyPath '/id' -Throughput 400"}
{"instruction": "Create Cosmos DB account 'cosmos002acct' (SQL API) in 'cosmos-rg-2' at eastus.", "output": "New-AzCosmosDBAccount -ResourceGroupName 'cosmos-rg-2' -Name 'cosmos002acct' -Location 'eastus' -DefaultConsistencyLevel Session -ApiKind 'Sql' -EnableAutomaticFailover"}
{"instruction": "Create Cosmos DB database 'appdb' in account 'cosmos002acct'.", "output": "New-AzCosmosDBSqlDatabase -ResourceGroupName 'cosmos-rg-2' -AccountName 'cosmos002acct' -Name 'appdb'"}
{"instruction": "Create Cosmos DB container 'items' (pk='/id') in 'cosmos002acct/appdb'.", "output": "New-AzCosmosDBSqlContainer -ResourceGroupName 'cosmos-rg-2' -AccountName 'cosmos002acct' -DatabaseName 'appdb' -Name 'items' -PartitionKeyPath '/id' -Throughput 400"}
{"instruction": "Create Cosmos DB account 'cosmos003acct' (SQL API) in 'cosmos-rg-3' at eastus.", "output": "New-AzCosmosDBAccount -ResourceGroupName 'cosmos-rg-3' -Name 'cosmos003acct' -Location 'eastus' -DefaultConsistencyLevel Session -ApiKind 'Sql' -EnableAutomaticFailover"}
{"instruction": "Create Cosmos DB database 'appdb' in account 'cosmos003acct'.", "output": "New-AzCosmosDBSqlDatabase -ResourceGroupName 'cosmos-rg-3' -AccountName 'cosmos003acct' -Name 'appdb'"}
{"instruction": "Create Cosmos DB container 'items' (pk='/id') in 'cosmos003acct/appdb'.", "output": "New-AzCosmosDBSqlContainer -ResourceGroupName 'cosmos-rg-3' -AccountName 'cosmos003acct' -DatabaseName 'appdb' -Name 'items' -PartitionKeyPath '/id' -Throughput 400"}
{"instruction": "Create AKS cluster 'aks-cluster-1' in 'aks-rg-1' (eastus) with 1 node.", "output": "New-AzAks -ResourceGroupName 'aks-rg-1' -Name 'aks-cluster-1' -NodeCount 1 -NodeVmSize 'Standard_B4ms' -Location 'eastus'"}
{"instruction": "Get kubeconfig for AKS 'aks-cluster-1'.", "output": "Get-AzAksCredential -ResourceGroupName 'aks-rg-1' -Name 'aks-cluster-1' -Admin"}
{"instruction": "Scale AKS 'aks-cluster-1' node count to 2.", "output": "Update-AzAks -ResourceGroupName 'aks-rg-1' -Name 'aks-cluster-1' -NodeCount 2"}
{"instruction": "Create AKS cluster 'aks-cluster-2' in 'aks-rg-2' (eastus) with 1 node.", "output": "New-AzAks -ResourceGroupName 'aks-rg-2' -Name 'aks-cluster-2' -NodeCount 1 -NodeVmSize 'Standard_B4ms' -Location 'eastus'"}
{"instruction": "Get kubeconfig for AKS 'aks-cluster-2'.", "output": "Get-AzAksCredential -ResourceGroupName 'aks-rg-2' -Name 'aks-cluster-2' -Admin"}
{"instruction": "Scale AKS 'aks-cluster-2' node count to 2.", "output": "Update-AzAks -ResourceGroupName 'aks-rg-2' -Name 'aks-cluster-2' -NodeCount 2"}
{"instruction": "Create AKS cluster 'aks-cluster-3' in 'aks-rg-3' (eastus) with 1 node.", "output": "New-AzAks -ResourceGroupName 'aks-rg-3' -Name 'aks-cluster-3' -NodeCount 1 -NodeVmSize 'Standard_B4ms' -Location 'eastus'"}
{"instruction": "Get kubeconfig for AKS 'aks-cluster-3'.", "output": "Get-AzAksCredential -ResourceGroupName 'aks-rg-3' -Name 'aks-cluster-3' -Admin"}
{"instruction": "Scale AKS 'aks-cluster-3' node count to 2.", "output": "Update-AzAks -ResourceGroupName 'aks-rg-3' -Name 'aks-cluster-3' -NodeCount 2"}
{"instruction": "Create Azure Container Registry 'acr001registry' in 'acr-rg-1' at eastus.", "output": "New-AzContainerRegistry -ResourceGroupName 'acr-rg-1' -Name 'acr001registry' -Location 'eastus' -Sku Standard -AdminUserEnabled"}
{"instruction": "Import image 'nginx:latest' into 'acr001registry'.", "output": "Import-AzContainerRegistryImage -ResourceGroupName 'acr-rg-1' -RegistryName 'acr001registry' -SourceImage 'docker.io/library/nginx:latest' -Mode Force"}
{"instruction": "Create Azure Container Registry 'acr002registry' in 'acr-rg-2' at eastus.", "output": "New-AzContainerRegistry -ResourceGroupName 'acr-rg-2' -Name 'acr002registry' -Location 'eastus' -Sku Standard -AdminUserEnabled"}
{"instruction": "Import image 'nginx:latest' into 'acr002registry'.", "output": "Import-AzContainerRegistryImage -ResourceGroupName 'acr-rg-2' -RegistryName 'acr002registry' -SourceImage 'docker.io/library/nginx:latest' -Mode Force"}
{"instruction": "Create Azure Container Registry 'acr003registry' in 'acr-rg-3' at eastus.", "output": "New-AzContainerRegistry -ResourceGroupName 'acr-rg-3' -Name 'acr003registry' -Location 'eastus' -Sku Standard -AdminUserEnabled"}
{"instruction": "Import image 'nginx:latest' into 'acr003registry'.", "output": "Import-AzContainerRegistryImage -ResourceGroupName 'acr-rg-3' -RegistryName 'acr003registry' -SourceImage 'docker.io/library/nginx:latest' -Mode Force"}
{"instruction": "Create Log Analytics workspace 'logws-001' in 'mon-rg-1' at eastus.", "output": "New-AzOperationalInsightsWorkspace -ResourceGroupName 'mon-rg-1' -Location 'eastus' -Name 'logws-001' -Sku Standard"}
{"instruction": "Create Log Analytics workspace 'logws-002' in 'mon-rg-2' at eastus.", "output": "New-AzOperationalInsightsWorkspace -ResourceGroupName 'mon-rg-2' -Location 'eastus' -Name 'logws-002' -Sku Standard"}
{"instruction": "Create Log Analytics workspace 'logws-003' in 'mon-rg-3' at eastus.", "output": "New-AzOperationalInsightsWorkspace -ResourceGroupName 'mon-rg-3' -Location 'eastus' -Name 'logws-003' -Sku Standard"}
{"instruction": "Create Linux App Service plan 'asp-linux-1' (B1) in 'appsvc-rg-1' at eastus.", "output": "New-AzAppServicePlan -Name 'asp-linux-1' -Location 'eastus' -ResourceGroupName 'appsvc-rg-1' -Tier 'Basic' -NumberofWorkers 1 -Linux"}
{"instruction": "Create Web App 'webapp-001' in 'appsvc-rg-1' on plan 'asp-linux-1'.", "output": "New-AzWebApp -Name 'webapp-001' -ResourceGroupName 'appsvc-rg-1' -Location 'eastus' -AppServicePlan 'asp-linux-1'"}
{"instruction": "Set app setting 'ENV=prod' on 'webapp-001'.", "output": "Set-AzWebApp -Name 'webapp-001' -ResourceGroupName 'appsvc-rg-1' -AppSettings @{'ENV': 'prod'}"}
{"instruction": "Create Linux App Service plan 'asp-linux-2' (B1) in 'appsvc-rg-2' at eastus.", "output": "New-AzAppServicePlan -Name 'asp-linux-2' -Location 'eastus' -ResourceGroupName 'appsvc-rg-2' -Tier 'Basic' -NumberofWorkers 1 -Linux"}
{"instruction": "Create Web App 'webapp-002' in 'appsvc-rg-2' on plan 'asp-linux-2'.", "output": "New-AzWebApp -Name 'webapp-002' -ResourceGroupName 'appsvc-rg-2' -Location 'eastus' -AppServicePlan 'asp-linux-2'"}
{"instruction": "Set app setting 'ENV=prod' on 'webapp-002'.", "output": "Set-AzWebApp -Name 'webapp-002' -ResourceGroupName 'appsvc-rg-2' -AppSettings @{'ENV': 'prod'}"}
{"instruction": "Create Linux App Service plan 'asp-linux-3' (B1) in 'appsvc-rg-3' at eastus.", "output": "New-AzAppServicePlan -Name 'asp-linux-3' -Location 'eastus' -ResourceGroupName 'appsvc-rg-3' -Tier 'Basic' -NumberofWorkers 1 -Linux"}
{"instruction": "Create Web App 'webapp-003' in 'appsvc-rg-3' on plan 'asp-linux-3'.", "output": "New-AzWebApp -Name 'webapp-003' -ResourceGroupName 'appsvc-rg-3' -Location 'eastus' -AppServicePlan 'asp-linux-3'"}
{"instruction": "Set app setting 'ENV=prod' on 'webapp-003'.", "output": "Set-AzWebApp -Name 'webapp-003' -ResourceGroupName 'appsvc-rg-3' -AppSettings @{'ENV': 'prod'}"}
{"instruction": "Create Linux App Service plan 'asp-linux-4' (B1) in 'appsvc-rg-4' at eastus.", "output": "New-AzAppServicePlan -Name 'asp-linux-4' -Location 'eastus' -ResourceGroupName 'appsvc-rg-4' -Tier 'Basic' -NumberofWorkers 1 -Linux"}
{"instruction": "Create Web App 'webapp-004' in 'appsvc-rg-4' on plan 'asp-linux-4'.", "output": "New-AzWebApp -Name 'webapp-004' -ResourceGroupName 'appsvc-rg-4' -Location 'eastus' -AppServicePlan 'asp-linux-4'"}
{"instruction": "Set app setting 'ENV=prod' on 'webapp-004'.", "output": "Set-AzWebApp -Name 'webapp-004' -ResourceGroupName 'appsvc-rg-4' -AppSettings @{'ENV': 'prod'}"}
{"instruction": "List all resource groups.", "output": "Get-AzResourceGroup"}
{"instruction": "Show current subscription context.", "output": "Get-AzContext"}
{"instruction": "List all subscriptions.", "output": "Get-AzSubscription"}
{"instruction": "List VM sizes available in 'eastus'.", "output": "Get-AzVMSize -Location 'eastus'"}
{"instruction": "List available locations.", "output": "Get-AzLocation"}
{"instruction": "List public IPs in 'net-rg-1'.", "output": "Get-AzPublicIpAddress -ResourceGroupName 'net-rg-1'"}
{"instruction": "List network security groups in 'net-rg-1'.", "output": "Get-AzNetworkSecurityGroup -ResourceGroupName 'net-rg-1'"}
{"instruction": "List VNets in 'net-rg-1'.", "output": "Get-AzVirtualNetwork -ResourceGroupName 'net-rg-1'"}
{"instruction": "List NICs in 'net-rg-1'.", "output": "Get-AzNetworkInterface -ResourceGroupName 'net-rg-1'"}
{"instruction": "List Key Vaults in 'sec-rg-1'.", "output": "Get-AzKeyVault -ResourceGroupName 'sec-rg-1'"}
{"instruction": "Get Key Vault secret 'DbPassword' from 'kv-001-prod'.", "output": "(Get-AzKeyVaultSecret -VaultName 'kv-001-prod' -Name 'DbPassword').SecretValueText"}
{"instruction": "List container registries in subscription.", "output": "Get-AzContainerRegistry"}
{"instruction": "List AKS clusters in 'aks-rg-1'.", "output": "Get-AzAks -ResourceGroupName 'aks-rg-1'"}
{"instruction": "List Cosmos DB accounts in 'cosmos-rg-1'.", "output": "Get-AzCosmosDBAccount -ResourceGroupName 'cosmos-rg-1'"}
{"instruction": "List SQL servers in 'sql-rg-1'.", "output": "Get-AzSqlServer -ResourceGroupName 'sql-rg-1'"}
{"instruction": "Export ARM template for resource group 'misc-rg-1'.", "output": "Export-AzResourceGroup -ResourceGroupName 'misc-rg-1' -Path './misc-rg-1-template.json' -IncludeParameterDefaultValue"}
{"instruction": "Lock resource group 'misc-rg-1' with 'CanNotDelete'.", "output": "New-AzResourceLock -LockName 'misc-rg-1-lock' -LockLevel CanNotDelete -ResourceGroupName 'misc-rg-1'"}
{"instruction": "Remove lock 'misc-rg-1-lock' from resource group 'misc-rg-1'.", "output": "Remove-AzResourceLock -LockName 'misc-rg-1-lock' -ResourceGroupName 'misc-rg-1' -Force"}
{"instruction": "Export ARM template for resource group 'misc-rg-2'.", "output": "Export-AzResourceGroup -ResourceGroupName 'misc-rg-2' -Path './misc-rg-2-template.json' -IncludeParameterDefaultValue"}
{"instruction": "Lock resource group 'misc-rg-2' with 'CanNotDelete'.", "output": "New-AzResourceLock -LockName 'misc-rg-2-lock' -LockLevel CanNotDelete -ResourceGroupName 'misc-rg-2'"}
{"instruction": "Remove lock 'misc-rg-2-lock' from resource group 'misc-rg-2'.", "output": "Remove-AzResourceLock -LockName 'misc-rg-2-lock' -ResourceGroupName 'misc-rg-2' -Force"}
{"instruction": "Export ARM template for resource group 'misc-rg-3'.", "output": "Export-AzResourceGroup -ResourceGroupName 'misc-rg-3' -Path './misc-rg-3-template.json' -IncludeParameterDefaultValue"}
{"instruction": "Lock resource group 'misc-rg-3' with 'CanNotDelete'.", "output": "New-AzResourceLock -LockName 'misc-rg-3-lock' -LockLevel CanNotDelete -ResourceGroupName 'misc-rg-3'"}
{"instruction": "Remove lock 'misc-rg-3-lock' from resource group 'misc-rg-3'.", "output": "Remove-AzResourceLock -LockName 'misc-rg-3-lock' -ResourceGroupName 'misc-rg-3' -Force"}
{"instruction": "Export ARM template for resource group 'misc-rg-4'.", "output": "Export-AzResourceGroup -ResourceGroupName 'misc-rg-4' -Path './misc-rg-4-template.json' -IncludeParameterDefaultValue"}
{"instruction": "Lock resource group 'misc-rg-4' with 'CanNotDelete'.", "output": "New-AzResourceLock -LockName 'misc-rg-4-lock' -LockLevel CanNotDelete -ResourceGroupName 'misc-rg-4'"}
{"instruction": "Remove lock 'misc-rg-4-lock' from resource group 'misc-rg-4'.", "output": "Remove-AzResourceLock -LockName 'misc-rg-4-lock' -ResourceGroupName 'misc-rg-4' -Force"}
{"instruction": "Export ARM template for resource group 'misc-rg-5'.", "output": "Export-AzResourceGroup -ResourceGroupName 'misc-rg-5' -Path './misc-rg-5-template.json' -IncludeParameterDefaultValue"}
{"instruction": "Lock resource group 'misc-rg-5' with 'CanNotDelete'.", "output": "New-AzResourceLock -LockName 'misc-rg-5-lock' -LockLevel CanNotDelete -ResourceGroupName 'misc-rg-5'"}
{"instruction": "Remove lock 'misc-rg-5-lock' from resource group 'misc-rg-5'.", "output": "Remove-AzResourceLock -LockName 'misc-rg-5-lock' -ResourceGroupName 'misc-rg-5' -Force"}
{"instruction": "Export ARM template for resource group 'misc-rg-6'.", "output": "Export-AzResourceGroup -ResourceGroupName 'misc-rg-6' -Path './misc-rg-6-template.json' -IncludeParameterDefaultValue"}
{"instruction": "Lock resource group 'misc-rg-6' with 'CanNotDelete'.", "output": "New-AzResourceLock -LockName 'misc-rg-6-lock' -LockLevel CanNotDelete -ResourceGroupName 'misc-rg-6'"}
{"instruction": "Remove lock 'misc-rg-6-lock' from resource group 'misc-rg-6'.", "output": "Remove-AzResourceLock -LockName 'misc-rg-6-lock' -ResourceGroupName 'misc-rg-6' -Force"}
{"instruction": "Export ARM template for resource group 'misc-rg-7'.", "output": "Export-AzResourceGroup -ResourceGroupName 'misc-rg-7' -Path './misc-rg-7-template.json' -IncludeParameterDefaultValue"}
{"instruction": "Lock resource group 'misc-rg-7' with 'CanNotDelete'.", "output": "New-AzResourceLock -LockName 'misc-rg-7-lock' -LockLevel CanNotDelete -ResourceGroupName 'misc-rg-7'"}
{"instruction": "Remove lock 'misc-rg-7-lock' from resource group 'misc-rg-7'.", "output": "Remove-AzResourceLock -LockName 'misc-rg-7-lock' -ResourceGroupName 'misc-rg-7' -Force"}
{"instruction": "Export ARM template for resource group 'misc-rg-8'.", "output": "Export-AzResourceGroup -ResourceGroupName 'misc-rg-8' -Path './misc-rg-8-template.json' -IncludeParameterDefaultValue"}
{"instruction": "Lock resource group 'misc-rg-8' with 'CanNotDelete'.", "output": "New-AzResourceLock -LockName 'misc-rg-8-lock' -LockLevel CanNotDelete -ResourceGroupName 'misc-rg-8'"}
{"instruction": "Remove lock 'misc-rg-8-lock' from resource group 'misc-rg-8'.", "output": "Remove-AzResourceLock -LockName 'misc-rg-8-lock' -ResourceGroupName 'misc-rg-8' -Force"}
{"instruction": "Export ARM template for resource group 'misc-rg-9'.", "output": "Export-AzResourceGroup -ResourceGroupName 'misc-rg-9' -Path './misc-rg-9-template.json' -IncludeParameterDefaultValue"}
{"instruction": "Lock resource group 'misc-rg-9' with 'CanNotDelete'.", "output": "New-AzResourceLock -LockName 'misc-rg-9-lock' -LockLevel CanNotDelete -ResourceGroupName 'misc-rg-9'"}
{"instruction": "Remove lock 'misc-rg-9-lock' from resource group 'misc-rg-9'.", "output": "Remove-AzResourceLock -LockName 'misc-rg-9-lock' -ResourceGroupName 'misc-rg-9' -Force"}
{"instruction": "Export ARM template for resource group 'misc-rg-10'.", "output": "Export-AzResourceGroup -ResourceGroupName 'misc-rg-10' -Path './misc-rg-10-template.json' -IncludeParameterDefaultValue"}
{"instruction": "Lock resource group 'misc-rg-10' with 'CanNotDelete'.", "output": "New-AzResourceLock -LockName 'misc-rg-10-lock' -LockLevel CanNotDelete -ResourceGroupName 'misc-rg-10'"}
{"instruction": "Remove lock 'misc-rg-10-lock' from resource group 'misc-rg-10'.", "output": "Remove-AzResourceLock -LockName 'misc-rg-10-lock' -ResourceGroupName 'misc-rg-10' -Force"}
{"instruction": "Export ARM template for resource group 'misc-rg-11'.", "output": "Export-AzResourceGroup -ResourceGroupName 'misc-rg-11' -Path './misc-rg-11-template.json' -IncludeParameterDefaultValue"}
{"instruction": "Lock resource group 'misc-rg-11' with 'CanNotDelete'.", "output": "New-AzResourceLock -LockName 'misc-rg-11-lock' -LockLevel CanNotDelete -ResourceGroupName 'misc-rg-11'"}
{"instruction": "Remove lock 'misc-rg-11-lock' from resource group 'misc-rg-11'.", "output": "Remove-AzResourceLock -LockName 'misc-rg-11-lock' -ResourceGroupName 'misc-rg-11' -Force"}
{"instruction": "Export ARM template for resource group 'misc-rg-12'.", "output": "Export-AzResourceGroup -ResourceGroupName 'misc-rg-12' -Path './misc-rg-12-template.json' -IncludeParameterDefaultValue"}
{"instruction": "Lock resource group 'misc-rg-12' with 'CanNotDelete'.", "output": "New-AzResourceLock -LockName 'misc-rg-12-lock' -LockLevel CanNotDelete -ResourceGroupName 'misc-rg-12'"}
{"instruction": "Remove lock 'misc-rg-12-lock' from resource group 'misc-rg-12'.", "output": "Remove-AzResourceLock -LockName 'misc-rg-12-lock' -ResourceGroupName 'misc-rg-12' -Force"}
{"instruction": "Export ARM template for resource group 'misc-rg-13'.", "output": "Export-AzResourceGroup -ResourceGroupName 'misc-rg-13' -Path './misc-rg-13-template.json' -IncludeParameterDefaultValue"}
{"instruction": "Lock resource group 'misc-rg-13' with 'CanNotDelete'.", "output": "New-AzResourceLock -LockName 'misc-rg-13-lock' -LockLevel CanNotDelete -ResourceGroupName 'misc-rg-13'"}
{"instruction": "Remove lock 'misc-rg-13-lock' from resource group 'misc-rg-13'.", "output": "Remove-AzResourceLock -LockName 'misc-rg-13-lock' -ResourceGroupName 'misc-rg-13' -Force"}
{"instruction": "Export ARM template for resource group 'misc-rg-14'.", "output": "Export-AzResourceGroup -ResourceGroupName 'misc-rg-14' -Path './misc-rg-14-template.json' -IncludeParameterDefaultValue"}
{"instruction": "Lock resource group 'misc-rg-14' with 'CanNotDelete'.", "output": "New-AzResourceLock -LockName 'misc-rg-14-lock' -LockLevel CanNotDelete -ResourceGroupName 'misc-rg-14'"}
{"instruction": "Remove lock 'misc-rg-14-lock' from resource group 'misc-rg-14'.", "output": "Remove-AzResourceLock -LockName 'misc-rg-14-lock' -ResourceGroupName 'misc-rg-14' -Force"}
{"instruction": "Export ARM template for resource group 'misc-rg-15'.", "output": "Export-AzResourceGroup -ResourceGroupName 'misc-rg-15' -Path './misc-rg-15-template.json' -IncludeParameterDefaultValue"}
{"instruction": "Lock resource group 'misc-rg-15' with 'CanNotDelete'.", "output": "New-AzResourceLock -LockName 'misc-rg-15-lock' -LockLevel CanNotDelete -ResourceGroupName 'misc-rg-15'"}
{"instruction": "Remove lock 'misc-rg-15-lock' from resource group 'misc-rg-15'.", "output": "Remove-AzResourceLock -LockName 'misc-rg-15-lock' -ResourceGroupName 'misc-rg-15' -Force"}
